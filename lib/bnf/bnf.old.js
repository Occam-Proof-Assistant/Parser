'use strict';

var bnf = '\n\n    rules                ::= rule+ ;\n    \n    rule                 ::= ruleName "::=" definitions ";" ;\n    \n    definitions          ::= definition ( "|" definition )* ;\n    \n    definition           ::= part+ ;\n    \n    optionalPart         ::= part<NO_WHITESPACE>"?" ;\n    \n    zeroOrMoreParts      ::= part<NO_WHITESPACE>"*" ;\n    \n    oneOrMoreParts       ::= part<NO_WHITESPACE>"+" ;\n    \n    noWhitespacePart     ::= "<NO_WHITESPACE>" part ;\n    \n    groupOfParts         ::= "(" part+ ")" ;\n    \n    choiceOfParts        ::= "(" part ( "|" part )+ ")" ;\n    \n    part                 ::= noWhitespacePart\n    \n                           | optionalPart  \n                              \n                           | zeroOrMoreParts  \n                              \n                           | oneOrMoreParts  \n                              \n                           | groupOfParts  \n                              \n                           | choiceOfParts  \n                              \n                           | ruleName  \n                              \n                           | regularExpression \n                              \n                           | significantTokenType \n                              \n                           | terminalSymbol\n                              \n                           | endOfLine\n                              \n                           | epsilon\n                              \n                           | wildcard\n                              \n                           ;\n                              \n    ruleName             ::= [name] ;\n    \n    regularExpression    ::= [regularExpression] ;\n    \n    significantTokenType ::= [type] ;\n    \n    terminalSymbol       ::= [string] ;\n    \n    endOfLine            ::= "<END_OF_LINE>" ;\n    \n    epsilon              ::= "\u03B5" ;\n    \n    wildcard             ::= "." ;\n                         \n                         \n                         \n                \n                         \n                         \n                         \n                  \n                         \n                         \n                         \n';

module.exports = bnf;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9ibmYvYm5mLm9sZC5qcyJdLCJuYW1lcyI6WyJibmYiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxzc0VBQU47O0FBNEVBQyxPQUFPQyxPQUFQLEdBQWlCRixHQUFqQiIsImZpbGUiOiJibmYub2xkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBibmYgPSBgXG5cbiAgICBydWxlcyAgICAgICAgICAgICAgICA6Oj0gcnVsZSsgO1xuICAgIFxuICAgIHJ1bGUgICAgICAgICAgICAgICAgIDo6PSBydWxlTmFtZSBcIjo6PVwiIGRlZmluaXRpb25zIFwiO1wiIDtcbiAgICBcbiAgICBkZWZpbml0aW9ucyAgICAgICAgICA6Oj0gZGVmaW5pdGlvbiAoIFwifFwiIGRlZmluaXRpb24gKSogO1xuICAgIFxuICAgIGRlZmluaXRpb24gICAgICAgICAgIDo6PSBwYXJ0KyA7XG4gICAgXG4gICAgb3B0aW9uYWxQYXJ0ICAgICAgICAgOjo9IHBhcnQ8Tk9fV0hJVEVTUEFDRT5cIj9cIiA7XG4gICAgXG4gICAgemVyb09yTW9yZVBhcnRzICAgICAgOjo9IHBhcnQ8Tk9fV0hJVEVTUEFDRT5cIipcIiA7XG4gICAgXG4gICAgb25lT3JNb3JlUGFydHMgICAgICAgOjo9IHBhcnQ8Tk9fV0hJVEVTUEFDRT5cIitcIiA7XG4gICAgXG4gICAgbm9XaGl0ZXNwYWNlUGFydCAgICAgOjo9IFwiPE5PX1dISVRFU1BBQ0U+XCIgcGFydCA7XG4gICAgXG4gICAgZ3JvdXBPZlBhcnRzICAgICAgICAgOjo9IFwiKFwiIHBhcnQrIFwiKVwiIDtcbiAgICBcbiAgICBjaG9pY2VPZlBhcnRzICAgICAgICA6Oj0gXCIoXCIgcGFydCAoIFwifFwiIHBhcnQgKSsgXCIpXCIgO1xuICAgIFxuICAgIHBhcnQgICAgICAgICAgICAgICAgIDo6PSBub1doaXRlc3BhY2VQYXJ0XG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICB8IG9wdGlvbmFsUGFydCAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgemVyb09yTW9yZVBhcnRzICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBvbmVPck1vcmVQYXJ0cyAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgZ3JvdXBPZlBhcnRzICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBjaG9pY2VPZlBhcnRzICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBydWxlTmFtZSAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgcmVndWxhckV4cHJlc3Npb24gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgc2lnbmlmaWNhbnRUb2tlblR5cGUgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgdGVybWluYWxTeW1ib2xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBlbmRPZkxpbmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBlcHNpbG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgd2lsZGNhcmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgcnVsZU5hbWUgICAgICAgICAgICAgOjo9IFtuYW1lXSA7XG4gICAgXG4gICAgcmVndWxhckV4cHJlc3Npb24gICAgOjo9IFtyZWd1bGFyRXhwcmVzc2lvbl0gO1xuICAgIFxuICAgIHNpZ25pZmljYW50VG9rZW5UeXBlIDo6PSBbdHlwZV0gO1xuICAgIFxuICAgIHRlcm1pbmFsU3ltYm9sICAgICAgIDo6PSBbc3RyaW5nXSA7XG4gICAgXG4gICAgZW5kT2ZMaW5lICAgICAgICAgICAgOjo9IFwiPEVORF9PRl9MSU5FPlwiIDtcbiAgICBcbiAgICBlcHNpbG9uICAgICAgICAgICAgICA6Oj0gXCLOtVwiIDtcbiAgICBcbiAgICB3aWxkY2FyZCAgICAgICAgICAgICA6Oj0gXCIuXCIgO1xuICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgXG5gO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGJuZjtcbiJdfQ==