'use strict';

var grammar = '\n\n  productions           ::=  verticalSpace? production+\n  \n  production            ::=  productionName "::=" definitions\n  \n  definitions           ::=  definition ( "|" definition )*\n  \n  definition            ::=  part+ verticalSpace?\n  \n  part                  ::=  optionalPart  \n                \n                          |  zeroOrMoreParts  \n                \n                          |  oneOrMoreParts  \n                \n                          |  group  \n                           \n                          |  productionName  \n                \n                          |  regularExpression \n                \n                          |  significantTokenType \n\n                          |  terminalSymbol\n                        \n                          |  noWhitespace \n                \n                          |  endOfLine\n                \n  optionalPart          ::=  part "?"\n                          \n  zeroOrMoreParts       ::=  part "*"\n                          \n  oneOrMoreParts        ::=  part "+"\n                          \n  group                 ::=  "(" part+ ")"\n  \n  productionName        ::=  [name]\n\n  regularExpression     ::=  [regularExpression]\n  \n  significantTokenType  ::=  [type]\n\n  terminalSymbol        ::=  [string]\n  \n  verticalSpace         ::=  [endOfLine]+\n\n  noWhitespace          ::=  "<NO_WHITESPACE>"\n  \n  endOfLine             ::=  "<END_OF_LINE>"\n  \n';

module.exports = grammar;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9ibmYvZ3JhbW1hci5qcyJdLCJuYW1lcyI6WyJncmFtbWFyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBTUEsaThDQUFOOztBQXNEQUMsT0FBT0MsT0FBUCxHQUFpQkYsT0FBakIiLCJmaWxlIjoiZ3JhbW1hci5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgZ3JhbW1hciA9IGBcblxuICBwcm9kdWN0aW9ucyAgICAgICAgICAgOjo9ICB2ZXJ0aWNhbFNwYWNlPyBwcm9kdWN0aW9uK1xuICBcbiAgcHJvZHVjdGlvbiAgICAgICAgICAgIDo6PSAgcHJvZHVjdGlvbk5hbWUgXCI6Oj1cIiBkZWZpbml0aW9uc1xuICBcbiAgZGVmaW5pdGlvbnMgICAgICAgICAgIDo6PSAgZGVmaW5pdGlvbiAoIFwifFwiIGRlZmluaXRpb24gKSpcbiAgXG4gIGRlZmluaXRpb24gICAgICAgICAgICA6Oj0gIHBhcnQrIHZlcnRpY2FsU3BhY2U/XG4gIFxuICBwYXJ0ICAgICAgICAgICAgICAgICAgOjo9ICBvcHRpb25hbFBhcnQgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICB8ICB6ZXJvT3JNb3JlUGFydHMgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICB8ICBvbmVPck1vcmVQYXJ0cyAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHwgIGdyb3VwICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICB8ICBwcm9kdWN0aW9uTmFtZSAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHwgIHJlZ3VsYXJFeHByZXNzaW9uIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICB8ICBzaWduaWZpY2FudFRva2VuVHlwZSBcblxuICAgICAgICAgICAgICAgICAgICAgICAgICB8ICB0ZXJtaW5hbFN5bWJvbFxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHwgIG5vV2hpdGVzcGFjZSBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgZW5kT2ZMaW5lXG4gICAgICAgICAgICAgICAgXG4gIG9wdGlvbmFsUGFydCAgICAgICAgICA6Oj0gIHBhcnQgXCI/XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gIHplcm9Pck1vcmVQYXJ0cyAgICAgICA6Oj0gIHBhcnQgXCIqXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gIG9uZU9yTW9yZVBhcnRzICAgICAgICA6Oj0gIHBhcnQgXCIrXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gIGdyb3VwICAgICAgICAgICAgICAgICA6Oj0gIFwiKFwiIHBhcnQrIFwiKVwiXG4gIFxuICBwcm9kdWN0aW9uTmFtZSAgICAgICAgOjo9ICBbbmFtZV1cblxuICByZWd1bGFyRXhwcmVzc2lvbiAgICAgOjo9ICBbcmVndWxhckV4cHJlc3Npb25dXG4gIFxuICBzaWduaWZpY2FudFRva2VuVHlwZSAgOjo9ICBbdHlwZV1cblxuICB0ZXJtaW5hbFN5bWJvbCAgICAgICAgOjo9ICBbc3RyaW5nXVxuICBcbiAgdmVydGljYWxTcGFjZSAgICAgICAgIDo6PSAgW2VuZE9mTGluZV0rXG5cbiAgbm9XaGl0ZXNwYWNlICAgICAgICAgIDo6PSAgXCI8Tk9fV0hJVEVTUEFDRT5cIlxuICBcbiAgZW5kT2ZMaW5lICAgICAgICAgICAgIDo6PSAgXCI8RU5EX09GX0xJTkU+XCJcbiAgXG5gO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGdyYW1tYXI7XG4iXX0=