'use strict';

var grammar = '\n\n  productions           ::=  verticalSpace? production+\n  \n  production            ::=  productionName "::=" definitions\n  \n  definitions           ::=  definition ( "|" definition )*\n  \n  definition            ::=  part+ verticalSpace?\n  \n  part                  ::=  noWhitespacePart  \n                \n                          |  optionalPart  \n                \n                          |  zeroOrMoreParts  \n                \n                          |  oneOrMoreParts  \n                \n                          |  group  \n                           \n                          |  productionName  \n                \n                          |  regularExpression \n                \n                          |  significantTokenType \n\n                          |  terminalSymbol\n                \n  noWhitespacePart      ::=  "<NO_WHITESPACE>" part\n\n  optionalPart          ::=  part<NO_WHITESPACE>"?"\n                          \n  zeroOrMoreParts       ::=  part<NO_WHITESPACE>"*"\n                          \n  oneOrMoreParts        ::=  part<NO_WHITESPACE>"+"\n                          \n  group                 ::=  "(" part+ ")"\n  \n  productionName        ::=  [name]\n\n  regularExpression     ::=  [regularExpression]\n  \n  significantTokenType  ::=  [type]\n\n  terminalSymbol        ::=  [string]\n  \n  verticalSpace         ::=  [endOfLine]+\n  \n';

module.exports = grammar;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9ibmYvZ3JhbW1hci5qcyJdLCJuYW1lcyI6WyJncmFtbWFyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBTUEsaTRDQUFOOztBQWtEQUMsT0FBT0MsT0FBUCxHQUFpQkYsT0FBakIiLCJmaWxlIjoiZ3JhbW1hci5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgZ3JhbW1hciA9IGBcblxuICBwcm9kdWN0aW9ucyAgICAgICAgICAgOjo9ICB2ZXJ0aWNhbFNwYWNlPyBwcm9kdWN0aW9uK1xuICBcbiAgcHJvZHVjdGlvbiAgICAgICAgICAgIDo6PSAgcHJvZHVjdGlvbk5hbWUgXCI6Oj1cIiBkZWZpbml0aW9uc1xuICBcbiAgZGVmaW5pdGlvbnMgICAgICAgICAgIDo6PSAgZGVmaW5pdGlvbiAoIFwifFwiIGRlZmluaXRpb24gKSpcbiAgXG4gIGRlZmluaXRpb24gICAgICAgICAgICA6Oj0gIHBhcnQrIHZlcnRpY2FsU3BhY2U/XG4gIFxuICBwYXJ0ICAgICAgICAgICAgICAgICAgOjo9ICBub1doaXRlc3BhY2VQYXJ0ICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgb3B0aW9uYWxQYXJ0ICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgemVyb09yTW9yZVBhcnRzICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgb25lT3JNb3JlUGFydHMgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICB8ICBncm91cCAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgcHJvZHVjdGlvbk5hbWUgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICB8ICByZWd1bGFyRXhwcmVzc2lvbiBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgc2lnbmlmaWNhbnRUb2tlblR5cGUgXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgdGVybWluYWxTeW1ib2xcbiAgICAgICAgICAgICAgICBcbiAgbm9XaGl0ZXNwYWNlUGFydCAgICAgIDo6PSAgXCI8Tk9fV0hJVEVTUEFDRT5cIiBwYXJ0XG5cbiAgb3B0aW9uYWxQYXJ0ICAgICAgICAgIDo6PSAgcGFydDxOT19XSElURVNQQUNFPlwiP1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFxuICB6ZXJvT3JNb3JlUGFydHMgICAgICAgOjo9ICBwYXJ0PE5PX1dISVRFU1BBQ0U+XCIqXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gIG9uZU9yTW9yZVBhcnRzICAgICAgICA6Oj0gIHBhcnQ8Tk9fV0hJVEVTUEFDRT5cIitcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgZ3JvdXAgICAgICAgICAgICAgICAgIDo6PSAgXCIoXCIgcGFydCsgXCIpXCJcbiAgXG4gIHByb2R1Y3Rpb25OYW1lICAgICAgICA6Oj0gIFtuYW1lXVxuXG4gIHJlZ3VsYXJFeHByZXNzaW9uICAgICA6Oj0gIFtyZWd1bGFyRXhwcmVzc2lvbl1cbiAgXG4gIHNpZ25pZmljYW50VG9rZW5UeXBlICA6Oj0gIFt0eXBlXVxuXG4gIHRlcm1pbmFsU3ltYm9sICAgICAgICA6Oj0gIFtzdHJpbmddXG4gIFxuICB2ZXJ0aWNhbFNwYWNlICAgICAgICAgOjo9ICBbZW5kT2ZMaW5lXStcbiAgXG5gO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGdyYW1tYXI7XG4iXX0=