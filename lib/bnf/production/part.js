'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Production = require('../production'),
    ProductionNameRule = require('../rule/productionName'),
    NonTerminalNode = require('../../common/node/nonTerminal');

var PartProduction = function (_Production) {
  _inherits(PartProduction, _Production);

  function PartProduction() {
    _classCallCheck(this, PartProduction);

    var groupProductionName = 'group',
        endOfLineProductionName = 'endOfLine',
        optionalPartProductionName = 'optionalPart',
        noWhitespaceProductionName = 'noWhitespace',
        terminalSymbolProductionName = 'terminalSymbol',
        productionNameProductionName = 'productionName',
        regularExpressionProductionName = 'regularExpression',
        significantTokenTypeProductionName = 'significantTokenType',
        groupProductionNameRule = new ProductionNameRule(groupProductionName),
        endOfLineProductionNameRule = new ProductionNameRule(endOfLineProductionName),
        optionalPartProductionNameRule = new ProductionNameRule(optionalPartProductionName),
        noWhitespaceProductionNameRule = new ProductionNameRule(noWhitespaceProductionName),
        terminalSymbolProductionNameRule = new ProductionNameRule(terminalSymbolProductionName),
        productionNameProductionNameRule = new ProductionNameRule(productionNameProductionName),
        regularExpressionProductionNameRule = new ProductionNameRule(regularExpressionProductionName),
        significantTokenTypeProductionNameRule = new ProductionNameRule(significantTokenTypeProductionName),
        name = 'part',
        rules = [groupProductionNameRule, optionalPartProductionNameRule, productionNameProductionNameRule, regularExpressionProductionNameRule, significantTokenTypeProductionNameRule, terminalSymbolProductionNameRule, noWhitespaceProductionNameRule, endOfLineProductionNameRule],
        Node = NonTerminalNode;

    return _possibleConstructorReturn(this, (PartProduction.__proto__ || Object.getPrototypeOf(PartProduction)).call(this, name, rules, Node));
  }

  return PartProduction;
}(Production);

module.exports = PartProduction;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2VzNi9ibmYvcHJvZHVjdGlvbi9wYXJ0LmpzIl0sIm5hbWVzIjpbIlByb2R1Y3Rpb24iLCJyZXF1aXJlIiwiUHJvZHVjdGlvbk5hbWVSdWxlIiwiTm9uVGVybWluYWxOb2RlIiwiUGFydFByb2R1Y3Rpb24iLCJncm91cFByb2R1Y3Rpb25OYW1lIiwiZW5kT2ZMaW5lUHJvZHVjdGlvbk5hbWUiLCJvcHRpb25hbFBhcnRQcm9kdWN0aW9uTmFtZSIsIm5vV2hpdGVzcGFjZVByb2R1Y3Rpb25OYW1lIiwidGVybWluYWxTeW1ib2xQcm9kdWN0aW9uTmFtZSIsInByb2R1Y3Rpb25OYW1lUHJvZHVjdGlvbk5hbWUiLCJyZWd1bGFyRXhwcmVzc2lvblByb2R1Y3Rpb25OYW1lIiwic2lnbmlmaWNhbnRUb2tlblR5cGVQcm9kdWN0aW9uTmFtZSIsImdyb3VwUHJvZHVjdGlvbk5hbWVSdWxlIiwiZW5kT2ZMaW5lUHJvZHVjdGlvbk5hbWVSdWxlIiwib3B0aW9uYWxQYXJ0UHJvZHVjdGlvbk5hbWVSdWxlIiwibm9XaGl0ZXNwYWNlUHJvZHVjdGlvbk5hbWVSdWxlIiwidGVybWluYWxTeW1ib2xQcm9kdWN0aW9uTmFtZVJ1bGUiLCJwcm9kdWN0aW9uTmFtZVByb2R1Y3Rpb25OYW1lUnVsZSIsInJlZ3VsYXJFeHByZXNzaW9uUHJvZHVjdGlvbk5hbWVSdWxlIiwic2lnbmlmaWNhbnRUb2tlblR5cGVQcm9kdWN0aW9uTmFtZVJ1bGUiLCJuYW1lIiwicnVsZXMiLCJOb2RlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBRUEsSUFBTUEsYUFBYUMsUUFBUSxlQUFSLENBQW5CO0FBQUEsSUFDTUMscUJBQXFCRCxRQUFRLHdCQUFSLENBRDNCO0FBQUEsSUFFTUUsa0JBQWtCRixRQUFRLCtCQUFSLENBRnhCOztJQUlNRyxjOzs7QUFDSiw0QkFBYztBQUFBOztBQUNaLFFBQU1DLHNCQUFzQixPQUE1QjtBQUFBLFFBQ01DLDBCQUEwQixXQURoQztBQUFBLFFBRU1DLDZCQUE2QixjQUZuQztBQUFBLFFBR01DLDZCQUE2QixjQUhuQztBQUFBLFFBSU1DLCtCQUErQixnQkFKckM7QUFBQSxRQUtNQywrQkFBK0IsZ0JBTHJDO0FBQUEsUUFNTUMsa0NBQWtDLG1CQU54QztBQUFBLFFBT01DLHFDQUFxQyxzQkFQM0M7QUFBQSxRQVFNQywwQkFBMEIsSUFBSVgsa0JBQUosQ0FBdUJHLG1CQUF2QixDQVJoQztBQUFBLFFBU01TLDhCQUE4QixJQUFJWixrQkFBSixDQUF1QkksdUJBQXZCLENBVHBDO0FBQUEsUUFVTVMsaUNBQWlDLElBQUliLGtCQUFKLENBQXVCSywwQkFBdkIsQ0FWdkM7QUFBQSxRQVdNUyxpQ0FBaUMsSUFBSWQsa0JBQUosQ0FBdUJNLDBCQUF2QixDQVh2QztBQUFBLFFBWU1TLG1DQUFtQyxJQUFJZixrQkFBSixDQUF1Qk8sNEJBQXZCLENBWnpDO0FBQUEsUUFhTVMsbUNBQW1DLElBQUloQixrQkFBSixDQUF1QlEsNEJBQXZCLENBYnpDO0FBQUEsUUFjTVMsc0NBQXNDLElBQUlqQixrQkFBSixDQUF1QlMsK0JBQXZCLENBZDVDO0FBQUEsUUFlTVMseUNBQXlDLElBQUlsQixrQkFBSixDQUF1QlUsa0NBQXZCLENBZi9DO0FBQUEsUUFnQk1TLE9BQU8sTUFoQmI7QUFBQSxRQWlCTUMsUUFBUSxDQUNOVCx1QkFETSxFQUVORSw4QkFGTSxFQUdORyxnQ0FITSxFQUlOQyxtQ0FKTSxFQUtOQyxzQ0FMTSxFQU1OSCxnQ0FOTSxFQU9ORCw4QkFQTSxFQVFORiwyQkFSTSxDQWpCZDtBQUFBLFFBMkJNUyxPQUFPcEIsZUEzQmI7O0FBRFksMkhBOEJOa0IsSUE5Qk0sRUE4QkFDLEtBOUJBLEVBOEJPQyxJQTlCUDtBQStCYjs7O0VBaEMwQnZCLFU7O0FBbUM3QndCLE9BQU9DLE9BQVAsR0FBaUJyQixjQUFqQiIsImZpbGUiOiJwYXJ0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBQcm9kdWN0aW9uID0gcmVxdWlyZSgnLi4vcHJvZHVjdGlvbicpLFxuICAgICAgUHJvZHVjdGlvbk5hbWVSdWxlID0gcmVxdWlyZSgnLi4vcnVsZS9wcm9kdWN0aW9uTmFtZScpLFxuICAgICAgTm9uVGVybWluYWxOb2RlID0gcmVxdWlyZSgnLi4vLi4vY29tbW9uL25vZGUvbm9uVGVybWluYWwnKTtcblxuY2xhc3MgUGFydFByb2R1Y3Rpb24gZXh0ZW5kcyBQcm9kdWN0aW9uIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgY29uc3QgZ3JvdXBQcm9kdWN0aW9uTmFtZSA9ICdncm91cCcsXG4gICAgICAgICAgZW5kT2ZMaW5lUHJvZHVjdGlvbk5hbWUgPSAnZW5kT2ZMaW5lJyxcbiAgICAgICAgICBvcHRpb25hbFBhcnRQcm9kdWN0aW9uTmFtZSA9ICdvcHRpb25hbFBhcnQnLFxuICAgICAgICAgIG5vV2hpdGVzcGFjZVByb2R1Y3Rpb25OYW1lID0gJ25vV2hpdGVzcGFjZScsXG4gICAgICAgICAgdGVybWluYWxTeW1ib2xQcm9kdWN0aW9uTmFtZSA9ICd0ZXJtaW5hbFN5bWJvbCcsXG4gICAgICAgICAgcHJvZHVjdGlvbk5hbWVQcm9kdWN0aW9uTmFtZSA9ICdwcm9kdWN0aW9uTmFtZScsXG4gICAgICAgICAgcmVndWxhckV4cHJlc3Npb25Qcm9kdWN0aW9uTmFtZSA9ICdyZWd1bGFyRXhwcmVzc2lvbicsXG4gICAgICAgICAgc2lnbmlmaWNhbnRUb2tlblR5cGVQcm9kdWN0aW9uTmFtZSA9ICdzaWduaWZpY2FudFRva2VuVHlwZScsXG4gICAgICAgICAgZ3JvdXBQcm9kdWN0aW9uTmFtZVJ1bGUgPSBuZXcgUHJvZHVjdGlvbk5hbWVSdWxlKGdyb3VwUHJvZHVjdGlvbk5hbWUpLFxuICAgICAgICAgIGVuZE9mTGluZVByb2R1Y3Rpb25OYW1lUnVsZSA9IG5ldyBQcm9kdWN0aW9uTmFtZVJ1bGUoZW5kT2ZMaW5lUHJvZHVjdGlvbk5hbWUpLFxuICAgICAgICAgIG9wdGlvbmFsUGFydFByb2R1Y3Rpb25OYW1lUnVsZSA9IG5ldyBQcm9kdWN0aW9uTmFtZVJ1bGUob3B0aW9uYWxQYXJ0UHJvZHVjdGlvbk5hbWUpLFxuICAgICAgICAgIG5vV2hpdGVzcGFjZVByb2R1Y3Rpb25OYW1lUnVsZSA9IG5ldyBQcm9kdWN0aW9uTmFtZVJ1bGUobm9XaGl0ZXNwYWNlUHJvZHVjdGlvbk5hbWUpLFxuICAgICAgICAgIHRlcm1pbmFsU3ltYm9sUHJvZHVjdGlvbk5hbWVSdWxlID0gbmV3IFByb2R1Y3Rpb25OYW1lUnVsZSh0ZXJtaW5hbFN5bWJvbFByb2R1Y3Rpb25OYW1lKSxcbiAgICAgICAgICBwcm9kdWN0aW9uTmFtZVByb2R1Y3Rpb25OYW1lUnVsZSA9IG5ldyBQcm9kdWN0aW9uTmFtZVJ1bGUocHJvZHVjdGlvbk5hbWVQcm9kdWN0aW9uTmFtZSksXG4gICAgICAgICAgcmVndWxhckV4cHJlc3Npb25Qcm9kdWN0aW9uTmFtZVJ1bGUgPSBuZXcgUHJvZHVjdGlvbk5hbWVSdWxlKHJlZ3VsYXJFeHByZXNzaW9uUHJvZHVjdGlvbk5hbWUpLFxuICAgICAgICAgIHNpZ25pZmljYW50VG9rZW5UeXBlUHJvZHVjdGlvbk5hbWVSdWxlID0gbmV3IFByb2R1Y3Rpb25OYW1lUnVsZShzaWduaWZpY2FudFRva2VuVHlwZVByb2R1Y3Rpb25OYW1lKSxcbiAgICAgICAgICBuYW1lID0gJ3BhcnQnLFxuICAgICAgICAgIHJ1bGVzID0gW1xuICAgICAgICAgICAgZ3JvdXBQcm9kdWN0aW9uTmFtZVJ1bGUsXG4gICAgICAgICAgICBvcHRpb25hbFBhcnRQcm9kdWN0aW9uTmFtZVJ1bGUsXG4gICAgICAgICAgICBwcm9kdWN0aW9uTmFtZVByb2R1Y3Rpb25OYW1lUnVsZSxcbiAgICAgICAgICAgIHJlZ3VsYXJFeHByZXNzaW9uUHJvZHVjdGlvbk5hbWVSdWxlLFxuICAgICAgICAgICAgc2lnbmlmaWNhbnRUb2tlblR5cGVQcm9kdWN0aW9uTmFtZVJ1bGUsXG4gICAgICAgICAgICB0ZXJtaW5hbFN5bWJvbFByb2R1Y3Rpb25OYW1lUnVsZSxcbiAgICAgICAgICAgIG5vV2hpdGVzcGFjZVByb2R1Y3Rpb25OYW1lUnVsZSxcbiAgICAgICAgICAgIGVuZE9mTGluZVByb2R1Y3Rpb25OYW1lUnVsZVxuICAgICAgICAgIF0sXG4gICAgICAgICAgTm9kZSA9IE5vblRlcm1pbmFsTm9kZTtcbiAgICBcbiAgICBzdXBlcihuYW1lLCBydWxlcywgTm9kZSlcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFBhcnRQcm9kdWN0aW9uO1xuIl19