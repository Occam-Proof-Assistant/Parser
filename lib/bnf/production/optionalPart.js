'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Production = require('../production'),
    NonTerminalNode = require('../../common/node/nonTerminal'),
    ProductionNameDefinition = require('../definition/productionName');

var OptionalPartProduction = function (_Production) {
  _inherits(OptionalPartProduction, _Production);

  function OptionalPartProduction() {
    _classCallCheck(this, OptionalPartProduction);

    var groupProductionName = 'group',
        endOfLineProductionName = 'endOfLine',
        noWhitespaceProductionName = 'noWhitespace',
        terminalSymbolProductionName = 'terminalSymbol',
        productionNameProductionName = 'productionName',
        regularExpressionProductionName = 'regularExpression',
        significantTokenTypeProductionName = 'significantTokenType',
        groupProductionNameDefinition = new ProductionNameDefinition(groupProductionName),
        endOfLineProductionNameDefinition = new ProductionNameDefinition(endOfLineProductionName),
        noWhitespaceProductionNameDefinition = new ProductionNameDefinition(noWhitespaceProductionName),
        terminalSymbolProductionNameDefinition = new ProductionNameDefinition(terminalSymbolProductionName),
        productionNameProductionNameDefinition = new ProductionNameDefinition(productionNameProductionName),
        regularExpressionProductionNameDefinition = new ProductionNameDefinition(regularExpressionProductionName),
        significantTokenTypeProductionNameDefinition = new ProductionNameDefinition(significantTokenTypeProductionName),
        name = 'optionalPart',
        definitions = [groupProductionNameDefinition, productionNameProductionNameDefinition, regularExpressionProductionNameDefinition, significantTokenTypeProductionNameDefinition, terminalSymbolProductionNameDefinition, noWhitespaceProductionNameDefinition, endOfLineProductionNameDefinition],
        Node = NonTerminalNode;

    return _possibleConstructorReturn(this, (OptionalPartProduction.__proto__ || Object.getPrototypeOf(OptionalPartProduction)).call(this, name, definitions, Node));
  }

  return OptionalPartProduction;
}(Production);

module.exports = OptionalPartProduction;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2VzNi9ibmYvcHJvZHVjdGlvbi9vcHRpb25hbFBhcnQuanMiXSwibmFtZXMiOlsiUHJvZHVjdGlvbiIsInJlcXVpcmUiLCJOb25UZXJtaW5hbE5vZGUiLCJQcm9kdWN0aW9uTmFtZURlZmluaXRpb24iLCJPcHRpb25hbFBhcnRQcm9kdWN0aW9uIiwiZ3JvdXBQcm9kdWN0aW9uTmFtZSIsImVuZE9mTGluZVByb2R1Y3Rpb25OYW1lIiwibm9XaGl0ZXNwYWNlUHJvZHVjdGlvbk5hbWUiLCJ0ZXJtaW5hbFN5bWJvbFByb2R1Y3Rpb25OYW1lIiwicHJvZHVjdGlvbk5hbWVQcm9kdWN0aW9uTmFtZSIsInJlZ3VsYXJFeHByZXNzaW9uUHJvZHVjdGlvbk5hbWUiLCJzaWduaWZpY2FudFRva2VuVHlwZVByb2R1Y3Rpb25OYW1lIiwiZ3JvdXBQcm9kdWN0aW9uTmFtZURlZmluaXRpb24iLCJlbmRPZkxpbmVQcm9kdWN0aW9uTmFtZURlZmluaXRpb24iLCJub1doaXRlc3BhY2VQcm9kdWN0aW9uTmFtZURlZmluaXRpb24iLCJ0ZXJtaW5hbFN5bWJvbFByb2R1Y3Rpb25OYW1lRGVmaW5pdGlvbiIsInByb2R1Y3Rpb25OYW1lUHJvZHVjdGlvbk5hbWVEZWZpbml0aW9uIiwicmVndWxhckV4cHJlc3Npb25Qcm9kdWN0aW9uTmFtZURlZmluaXRpb24iLCJzaWduaWZpY2FudFRva2VuVHlwZVByb2R1Y3Rpb25OYW1lRGVmaW5pdGlvbiIsIm5hbWUiLCJkZWZpbml0aW9ucyIsIk5vZGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFFQSxJQUFNQSxhQUFhQyxRQUFRLGVBQVIsQ0FBbkI7QUFBQSxJQUNNQyxrQkFBa0JELFFBQVEsK0JBQVIsQ0FEeEI7QUFBQSxJQUVNRSwyQkFBMkJGLFFBQVEsOEJBQVIsQ0FGakM7O0lBSU1HLHNCOzs7QUFDSixvQ0FBYztBQUFBOztBQUNaLFFBQU1DLHNCQUFzQixPQUE1QjtBQUFBLFFBQ01DLDBCQUEwQixXQURoQztBQUFBLFFBRU1DLDZCQUE2QixjQUZuQztBQUFBLFFBR01DLCtCQUErQixnQkFIckM7QUFBQSxRQUlNQywrQkFBK0IsZ0JBSnJDO0FBQUEsUUFLTUMsa0NBQWtDLG1CQUx4QztBQUFBLFFBTU1DLHFDQUFxQyxzQkFOM0M7QUFBQSxRQU9NQyxnQ0FBZ0MsSUFBSVQsd0JBQUosQ0FBNkJFLG1CQUE3QixDQVB0QztBQUFBLFFBUU1RLG9DQUFvQyxJQUFJVix3QkFBSixDQUE2QkcsdUJBQTdCLENBUjFDO0FBQUEsUUFTTVEsdUNBQXVDLElBQUlYLHdCQUFKLENBQTZCSSwwQkFBN0IsQ0FUN0M7QUFBQSxRQVVNUSx5Q0FBeUMsSUFBSVosd0JBQUosQ0FBNkJLLDRCQUE3QixDQVYvQztBQUFBLFFBV01RLHlDQUF5QyxJQUFJYix3QkFBSixDQUE2Qk0sNEJBQTdCLENBWC9DO0FBQUEsUUFZTVEsNENBQTRDLElBQUlkLHdCQUFKLENBQTZCTywrQkFBN0IsQ0FabEQ7QUFBQSxRQWFNUSwrQ0FBK0MsSUFBSWYsd0JBQUosQ0FBNkJRLGtDQUE3QixDQWJyRDtBQUFBLFFBY01RLE9BQU8sY0FkYjtBQUFBLFFBZU1DLGNBQWMsQ0FDWlIsNkJBRFksRUFFWkksc0NBRlksRUFHWkMseUNBSFksRUFJWkMsNENBSlksRUFLWkgsc0NBTFksRUFNWkQsb0NBTlksRUFPWkQsaUNBUFksQ0FmcEI7QUFBQSxRQXdCTVEsT0FBT25CLGVBeEJiOztBQURZLDJJQTJCTmlCLElBM0JNLEVBMkJBQyxXQTNCQSxFQTJCYUMsSUEzQmI7QUE0QmI7OztFQTdCa0NyQixVOztBQWdDckNzQixPQUFPQyxPQUFQLEdBQWlCbkIsc0JBQWpCIiwiZmlsZSI6Im9wdGlvbmFsUGFydC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgUHJvZHVjdGlvbiA9IHJlcXVpcmUoJy4uL3Byb2R1Y3Rpb24nKSxcbiAgICAgIE5vblRlcm1pbmFsTm9kZSA9IHJlcXVpcmUoJy4uLy4uL2NvbW1vbi9ub2RlL25vblRlcm1pbmFsJyksXG4gICAgICBQcm9kdWN0aW9uTmFtZURlZmluaXRpb24gPSByZXF1aXJlKCcuLi9kZWZpbml0aW9uL3Byb2R1Y3Rpb25OYW1lJyk7XG5cbmNsYXNzIE9wdGlvbmFsUGFydFByb2R1Y3Rpb24gZXh0ZW5kcyBQcm9kdWN0aW9uIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgY29uc3QgZ3JvdXBQcm9kdWN0aW9uTmFtZSA9ICdncm91cCcsXG4gICAgICAgICAgZW5kT2ZMaW5lUHJvZHVjdGlvbk5hbWUgPSAnZW5kT2ZMaW5lJyxcbiAgICAgICAgICBub1doaXRlc3BhY2VQcm9kdWN0aW9uTmFtZSA9ICdub1doaXRlc3BhY2UnLFxuICAgICAgICAgIHRlcm1pbmFsU3ltYm9sUHJvZHVjdGlvbk5hbWUgPSAndGVybWluYWxTeW1ib2wnLFxuICAgICAgICAgIHByb2R1Y3Rpb25OYW1lUHJvZHVjdGlvbk5hbWUgPSAncHJvZHVjdGlvbk5hbWUnLFxuICAgICAgICAgIHJlZ3VsYXJFeHByZXNzaW9uUHJvZHVjdGlvbk5hbWUgPSAncmVndWxhckV4cHJlc3Npb24nLFxuICAgICAgICAgIHNpZ25pZmljYW50VG9rZW5UeXBlUHJvZHVjdGlvbk5hbWUgPSAnc2lnbmlmaWNhbnRUb2tlblR5cGUnLFxuICAgICAgICAgIGdyb3VwUHJvZHVjdGlvbk5hbWVEZWZpbml0aW9uID0gbmV3IFByb2R1Y3Rpb25OYW1lRGVmaW5pdGlvbihncm91cFByb2R1Y3Rpb25OYW1lKSxcbiAgICAgICAgICBlbmRPZkxpbmVQcm9kdWN0aW9uTmFtZURlZmluaXRpb24gPSBuZXcgUHJvZHVjdGlvbk5hbWVEZWZpbml0aW9uKGVuZE9mTGluZVByb2R1Y3Rpb25OYW1lKSxcbiAgICAgICAgICBub1doaXRlc3BhY2VQcm9kdWN0aW9uTmFtZURlZmluaXRpb24gPSBuZXcgUHJvZHVjdGlvbk5hbWVEZWZpbml0aW9uKG5vV2hpdGVzcGFjZVByb2R1Y3Rpb25OYW1lKSxcbiAgICAgICAgICB0ZXJtaW5hbFN5bWJvbFByb2R1Y3Rpb25OYW1lRGVmaW5pdGlvbiA9IG5ldyBQcm9kdWN0aW9uTmFtZURlZmluaXRpb24odGVybWluYWxTeW1ib2xQcm9kdWN0aW9uTmFtZSksXG4gICAgICAgICAgcHJvZHVjdGlvbk5hbWVQcm9kdWN0aW9uTmFtZURlZmluaXRpb24gPSBuZXcgUHJvZHVjdGlvbk5hbWVEZWZpbml0aW9uKHByb2R1Y3Rpb25OYW1lUHJvZHVjdGlvbk5hbWUpLFxuICAgICAgICAgIHJlZ3VsYXJFeHByZXNzaW9uUHJvZHVjdGlvbk5hbWVEZWZpbml0aW9uID0gbmV3IFByb2R1Y3Rpb25OYW1lRGVmaW5pdGlvbihyZWd1bGFyRXhwcmVzc2lvblByb2R1Y3Rpb25OYW1lKSxcbiAgICAgICAgICBzaWduaWZpY2FudFRva2VuVHlwZVByb2R1Y3Rpb25OYW1lRGVmaW5pdGlvbiA9IG5ldyBQcm9kdWN0aW9uTmFtZURlZmluaXRpb24oc2lnbmlmaWNhbnRUb2tlblR5cGVQcm9kdWN0aW9uTmFtZSksXG4gICAgICAgICAgbmFtZSA9ICdvcHRpb25hbFBhcnQnLFxuICAgICAgICAgIGRlZmluaXRpb25zID0gW1xuICAgICAgICAgICAgZ3JvdXBQcm9kdWN0aW9uTmFtZURlZmluaXRpb24sXG4gICAgICAgICAgICBwcm9kdWN0aW9uTmFtZVByb2R1Y3Rpb25OYW1lRGVmaW5pdGlvbixcbiAgICAgICAgICAgIHJlZ3VsYXJFeHByZXNzaW9uUHJvZHVjdGlvbk5hbWVEZWZpbml0aW9uLFxuICAgICAgICAgICAgc2lnbmlmaWNhbnRUb2tlblR5cGVQcm9kdWN0aW9uTmFtZURlZmluaXRpb24sXG4gICAgICAgICAgICB0ZXJtaW5hbFN5bWJvbFByb2R1Y3Rpb25OYW1lRGVmaW5pdGlvbixcbiAgICAgICAgICAgIG5vV2hpdGVzcGFjZVByb2R1Y3Rpb25OYW1lRGVmaW5pdGlvbixcbiAgICAgICAgICAgIGVuZE9mTGluZVByb2R1Y3Rpb25OYW1lRGVmaW5pdGlvblxuICAgICAgICAgIF0sXG4gICAgICAgICAgTm9kZSA9IE5vblRlcm1pbmFsTm9kZTtcblxuICAgIHN1cGVyKG5hbWUsIGRlZmluaXRpb25zLCBOb2RlKVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gT3B0aW9uYWxQYXJ0UHJvZHVjdGlvbjtcbiJdfQ==