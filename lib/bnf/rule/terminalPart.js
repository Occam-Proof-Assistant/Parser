'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Rule = require('../rule'),
    PartNode = require('../node/part'),
    ruleNames = require('../ruleNames'),
    RuleNameDefinition = require('../definition/ruleName');

var RegularExpressionRuleName = ruleNames.RegularExpressionRuleName,
    SignificantTokenTypeRuleName = ruleNames.SignificantTokenTypeRuleName,
    TerminalSymbolRuleName = ruleNames.TerminalSymbolRuleName,
    EndOfLineRuleName = ruleNames.EndOfLineRuleName,
    EpsilonRuleName = ruleNames.EpsilonRuleName,
    WildcardRuleName = ruleNames.WildcardRuleName;

var TerminalPartRule = function (_Rule) {
  _inherits(TerminalPartRule, _Rule);

  function TerminalPartRule() {
    _classCallCheck(this, TerminalPartRule);

    var name = PartRuleName,
        epsilonRuleName = EpsilonRuleName,
        wildcardRuleName = WildcardRuleName,
        endOfLineRuleName = EndOfLineRuleName,
        terminalSymbolRuleName = TerminalSymbolRuleName,
        regularExpressionRuleName = RegularExpressionRuleName,
        significantTokenTypeRuleName = SignificantTokenTypeRuleName,
        epsilonRuleNameDefinition = new RuleNameDefinition(epsilonRuleName),
        wildcardRuleNameDefinition = new RuleNameDefinition(wildcardRuleName),
        endOfLineRuleNameDefinition = new RuleNameDefinition(endOfLineRuleName),
        terminalSymbolRuleNameDefinition = new RuleNameDefinition(terminalSymbolRuleName),
        regularExpressionRuleNameDefinition = new RuleNameDefinition(regularExpressionRuleName),
        significantTokenTypeRuleNameDefinition = new RuleNameDefinition(significantTokenTypeRuleName),
        definitions = [regularExpressionRuleNameDefinition, significantTokenTypeRuleNameDefinition, terminalSymbolRuleNameDefinition, endOfLineRuleNameDefinition, epsilonRuleNameDefinition, wildcardRuleNameDefinition],
        Node = PartNode;

    return _possibleConstructorReturn(this, (TerminalPartRule.__proto__ || Object.getPrototypeOf(TerminalPartRule)).call(this, name, definitions, Node));
  }

  return TerminalPartRule;
}(Rule);

module.exports = TerminalPartRule;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2VzNi9ibmYvcnVsZS90ZXJtaW5hbFBhcnQuanMiXSwibmFtZXMiOlsiUnVsZSIsInJlcXVpcmUiLCJQYXJ0Tm9kZSIsInJ1bGVOYW1lcyIsIlJ1bGVOYW1lRGVmaW5pdGlvbiIsIlJlZ3VsYXJFeHByZXNzaW9uUnVsZU5hbWUiLCJTaWduaWZpY2FudFRva2VuVHlwZVJ1bGVOYW1lIiwiVGVybWluYWxTeW1ib2xSdWxlTmFtZSIsIkVuZE9mTGluZVJ1bGVOYW1lIiwiRXBzaWxvblJ1bGVOYW1lIiwiV2lsZGNhcmRSdWxlTmFtZSIsIlRlcm1pbmFsUGFydFJ1bGUiLCJuYW1lIiwiUGFydFJ1bGVOYW1lIiwiZXBzaWxvblJ1bGVOYW1lIiwid2lsZGNhcmRSdWxlTmFtZSIsImVuZE9mTGluZVJ1bGVOYW1lIiwidGVybWluYWxTeW1ib2xSdWxlTmFtZSIsInJlZ3VsYXJFeHByZXNzaW9uUnVsZU5hbWUiLCJzaWduaWZpY2FudFRva2VuVHlwZVJ1bGVOYW1lIiwiZXBzaWxvblJ1bGVOYW1lRGVmaW5pdGlvbiIsIndpbGRjYXJkUnVsZU5hbWVEZWZpbml0aW9uIiwiZW5kT2ZMaW5lUnVsZU5hbWVEZWZpbml0aW9uIiwidGVybWluYWxTeW1ib2xSdWxlTmFtZURlZmluaXRpb24iLCJyZWd1bGFyRXhwcmVzc2lvblJ1bGVOYW1lRGVmaW5pdGlvbiIsInNpZ25pZmljYW50VG9rZW5UeXBlUnVsZU5hbWVEZWZpbml0aW9uIiwiZGVmaW5pdGlvbnMiLCJOb2RlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBRUEsSUFBTUEsT0FBT0MsUUFBUSxTQUFSLENBQWI7QUFBQSxJQUNNQyxXQUFXRCxRQUFRLGNBQVIsQ0FEakI7QUFBQSxJQUVNRSxZQUFZRixRQUFRLGNBQVIsQ0FGbEI7QUFBQSxJQUdNRyxxQkFBcUJILFFBQVEsd0JBQVIsQ0FIM0I7O0lBS1FJLHlCLEdBQTBJRixTLENBQTFJRSx5QjtJQUEyQkMsNEIsR0FBK0dILFMsQ0FBL0dHLDRCO0lBQThCQyxzQixHQUFpRkosUyxDQUFqRkksc0I7SUFBd0JDLGlCLEdBQXlETCxTLENBQXpESyxpQjtJQUFtQkMsZSxHQUFzQ04sUyxDQUF0Q00sZTtJQUFpQkMsZ0IsR0FBcUJQLFMsQ0FBckJPLGdCOztJQUV2SEMsZ0I7OztBQUNKLDhCQUFjO0FBQUE7O0FBQ1osUUFBTUMsT0FBT0MsWUFBYjtBQUFBLFFBQ01DLGtCQUFrQkwsZUFEeEI7QUFBQSxRQUVNTSxtQkFBbUJMLGdCQUZ6QjtBQUFBLFFBR01NLG9CQUFvQlIsaUJBSDFCO0FBQUEsUUFJTVMseUJBQXlCVixzQkFKL0I7QUFBQSxRQUtNVyw0QkFBNEJiLHlCQUxsQztBQUFBLFFBTU1jLCtCQUErQmIsNEJBTnJDO0FBQUEsUUFPTWMsNEJBQTRCLElBQUloQixrQkFBSixDQUF1QlUsZUFBdkIsQ0FQbEM7QUFBQSxRQVFNTyw2QkFBNkIsSUFBSWpCLGtCQUFKLENBQXVCVyxnQkFBdkIsQ0FSbkM7QUFBQSxRQVNNTyw4QkFBOEIsSUFBSWxCLGtCQUFKLENBQXVCWSxpQkFBdkIsQ0FUcEM7QUFBQSxRQVVNTyxtQ0FBbUMsSUFBSW5CLGtCQUFKLENBQXVCYSxzQkFBdkIsQ0FWekM7QUFBQSxRQVdNTyxzQ0FBc0MsSUFBSXBCLGtCQUFKLENBQXVCYyx5QkFBdkIsQ0FYNUM7QUFBQSxRQVlNTyx5Q0FBeUMsSUFBSXJCLGtCQUFKLENBQXVCZSw0QkFBdkIsQ0FaL0M7QUFBQSxRQWFNTyxjQUFjLENBQ1pGLG1DQURZLEVBRVpDLHNDQUZZLEVBR1pGLGdDQUhZLEVBSVpELDJCQUpZLEVBS1pGLHlCQUxZLEVBTVpDLDBCQU5ZLENBYnBCO0FBQUEsUUFxQk1NLE9BQU96QixRQXJCYjs7QUFEWSwrSEF3Qk5VLElBeEJNLEVBd0JBYyxXQXhCQSxFQXdCYUMsSUF4QmI7QUF5QmI7OztFQTFCNEIzQixJOztBQTZCL0I0QixPQUFPQyxPQUFQLEdBQWlCbEIsZ0JBQWpCIiwiZmlsZSI6InRlcm1pbmFsUGFydC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgUnVsZSA9IHJlcXVpcmUoJy4uL3J1bGUnKSxcbiAgICAgIFBhcnROb2RlID0gcmVxdWlyZSgnLi4vbm9kZS9wYXJ0JyksXG4gICAgICBydWxlTmFtZXMgPSByZXF1aXJlKCcuLi9ydWxlTmFtZXMnKSxcbiAgICAgIFJ1bGVOYW1lRGVmaW5pdGlvbiA9IHJlcXVpcmUoJy4uL2RlZmluaXRpb24vcnVsZU5hbWUnKTtcblxuY29uc3QgeyBSZWd1bGFyRXhwcmVzc2lvblJ1bGVOYW1lLCBTaWduaWZpY2FudFRva2VuVHlwZVJ1bGVOYW1lLCBUZXJtaW5hbFN5bWJvbFJ1bGVOYW1lLCBFbmRPZkxpbmVSdWxlTmFtZSwgRXBzaWxvblJ1bGVOYW1lLCBXaWxkY2FyZFJ1bGVOYW1lIH0gPSBydWxlTmFtZXM7XG5cbmNsYXNzIFRlcm1pbmFsUGFydFJ1bGUgZXh0ZW5kcyBSdWxlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgY29uc3QgbmFtZSA9IFBhcnRSdWxlTmFtZSxcbiAgICAgICAgICBlcHNpbG9uUnVsZU5hbWUgPSBFcHNpbG9uUnVsZU5hbWUsXG4gICAgICAgICAgd2lsZGNhcmRSdWxlTmFtZSA9IFdpbGRjYXJkUnVsZU5hbWUsXG4gICAgICAgICAgZW5kT2ZMaW5lUnVsZU5hbWUgPSBFbmRPZkxpbmVSdWxlTmFtZSxcbiAgICAgICAgICB0ZXJtaW5hbFN5bWJvbFJ1bGVOYW1lID0gVGVybWluYWxTeW1ib2xSdWxlTmFtZSxcbiAgICAgICAgICByZWd1bGFyRXhwcmVzc2lvblJ1bGVOYW1lID0gUmVndWxhckV4cHJlc3Npb25SdWxlTmFtZSxcbiAgICAgICAgICBzaWduaWZpY2FudFRva2VuVHlwZVJ1bGVOYW1lID0gU2lnbmlmaWNhbnRUb2tlblR5cGVSdWxlTmFtZSxcbiAgICAgICAgICBlcHNpbG9uUnVsZU5hbWVEZWZpbml0aW9uID0gbmV3IFJ1bGVOYW1lRGVmaW5pdGlvbihlcHNpbG9uUnVsZU5hbWUpLFxuICAgICAgICAgIHdpbGRjYXJkUnVsZU5hbWVEZWZpbml0aW9uID0gbmV3IFJ1bGVOYW1lRGVmaW5pdGlvbih3aWxkY2FyZFJ1bGVOYW1lKSxcbiAgICAgICAgICBlbmRPZkxpbmVSdWxlTmFtZURlZmluaXRpb24gPSBuZXcgUnVsZU5hbWVEZWZpbml0aW9uKGVuZE9mTGluZVJ1bGVOYW1lKSxcbiAgICAgICAgICB0ZXJtaW5hbFN5bWJvbFJ1bGVOYW1lRGVmaW5pdGlvbiA9IG5ldyBSdWxlTmFtZURlZmluaXRpb24odGVybWluYWxTeW1ib2xSdWxlTmFtZSksXG4gICAgICAgICAgcmVndWxhckV4cHJlc3Npb25SdWxlTmFtZURlZmluaXRpb24gPSBuZXcgUnVsZU5hbWVEZWZpbml0aW9uKHJlZ3VsYXJFeHByZXNzaW9uUnVsZU5hbWUpLFxuICAgICAgICAgIHNpZ25pZmljYW50VG9rZW5UeXBlUnVsZU5hbWVEZWZpbml0aW9uID0gbmV3IFJ1bGVOYW1lRGVmaW5pdGlvbihzaWduaWZpY2FudFRva2VuVHlwZVJ1bGVOYW1lKSxcbiAgICAgICAgICBkZWZpbml0aW9ucyA9IFtcbiAgICAgICAgICAgIHJlZ3VsYXJFeHByZXNzaW9uUnVsZU5hbWVEZWZpbml0aW9uLFxuICAgICAgICAgICAgc2lnbmlmaWNhbnRUb2tlblR5cGVSdWxlTmFtZURlZmluaXRpb24sXG4gICAgICAgICAgICB0ZXJtaW5hbFN5bWJvbFJ1bGVOYW1lRGVmaW5pdGlvbixcbiAgICAgICAgICAgIGVuZE9mTGluZVJ1bGVOYW1lRGVmaW5pdGlvbixcbiAgICAgICAgICAgIGVwc2lsb25SdWxlTmFtZURlZmluaXRpb24sXG4gICAgICAgICAgICB3aWxkY2FyZFJ1bGVOYW1lRGVmaW5pdGlvblxuICAgICAgICAgIF0sXG4gICAgICAgICAgTm9kZSA9IFBhcnROb2RlO1xuICAgIFxuICAgIHN1cGVyKG5hbWUsIGRlZmluaXRpb25zLCBOb2RlKVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gVGVybWluYWxQYXJ0UnVsZTtcbiJdfQ==