'use strict';

module.exports = '\n\n      document             ::=  ( rule | error )+ ;\n\n      rule                 ::=  name "::=" definitions ";" ;\n\n      name                 ::=  [name] ;\n\n      definitions          ::=  definition ( "|" definition )* ;\n\n      definition           ::=  part+ ;\n\n      part                 ::=  nonTerminalPart modifier*\n\n                             |  "<NO_WHITESPACE>"? terminalPart\n\n                             ;\n\n      nonTerminalPart      ::=  choiceOfParts\n\n                             |  groupOfParts\n\n                             |  ruleName lookAheadModifier?\n\n                             ;\n\n      terminalPart         ::=  regularExpression\n\n                             |  significantTokenType\n\n                             |  terminalSymbol\n\n                             |  endOfLine\n\n                             |  epsilon\n\n                             |  wildcard\n\n                             ;\n\n      choiceOfParts        ::=  "(" part ( "|" part )+ ")" ;\n\n      groupOfParts         ::=  "(" part part+ ")" ;\n\n      ruleName             ::=  [name] ;\n\n      regularExpression    ::=  [regular-expression] ;\n\n      significantTokenType ::=  [type] ;\n\n      terminalSymbol       ::=  [string-literal] ;\n\n      endOfLine            ::=  "<END_OF_LINE>" ;\n\n      epsilon              ::=  "\u03B5" ;\n\n      wildcard             ::=  "." ;\n\n      modifier             ::=  optionalModifier\n\n                             |  zeroOrMoreModifier\n\n                             |  oneOrMoreModifier\n\n                             ;\n\n      optionalModifier     ::=  <NO_WHITESPACE>"?" ;\n\n      zeroOrMoreModifier   ::=  <NO_WHITESPACE>"*" ;\n\n      oneOrMoreModifier    ::=  <NO_WHITESPACE>"+" ;\n\n      lookAheadModifier    ::=  <NO_WHITESPACE>"!" ;\n\n      error                ::=  . ;\n\n';
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9ibmYvYm5mLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBQSxPQUFPQyxPQUFQIiwiZmlsZSI6ImJuZi5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBgXG5cbiAgICAgIGRvY3VtZW50ICAgICAgICAgICAgIDo6PSAgKCBydWxlIHwgZXJyb3IgKSsgO1xuXG4gICAgICBydWxlICAgICAgICAgICAgICAgICA6Oj0gIG5hbWUgXCI6Oj1cIiBkZWZpbml0aW9ucyBcIjtcIiA7XG5cbiAgICAgIG5hbWUgICAgICAgICAgICAgICAgIDo6PSAgW25hbWVdIDtcblxuICAgICAgZGVmaW5pdGlvbnMgICAgICAgICAgOjo9ICBkZWZpbml0aW9uICggXCJ8XCIgZGVmaW5pdGlvbiApKiA7XG5cbiAgICAgIGRlZmluaXRpb24gICAgICAgICAgIDo6PSAgcGFydCsgO1xuXG4gICAgICBwYXJ0ICAgICAgICAgICAgICAgICA6Oj0gIG5vblRlcm1pbmFsUGFydCBtb2RpZmllcipcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICBcIjxOT19XSElURVNQQUNFPlwiPyB0ZXJtaW5hbFBhcnRcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA7XG5cbiAgICAgIG5vblRlcm1pbmFsUGFydCAgICAgIDo6PSAgY2hvaWNlT2ZQYXJ0c1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIGdyb3VwT2ZQYXJ0c1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIHJ1bGVOYW1lIGxvb2tBaGVhZE1vZGlmaWVyP1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDtcblxuICAgICAgdGVybWluYWxQYXJ0ICAgICAgICAgOjo9ICByZWd1bGFyRXhwcmVzc2lvblxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIHNpZ25pZmljYW50VG9rZW5UeXBlXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgdGVybWluYWxTeW1ib2xcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICBlbmRPZkxpbmVcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICBlcHNpbG9uXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgd2lsZGNhcmRcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA7XG5cbiAgICAgIGNob2ljZU9mUGFydHMgICAgICAgIDo6PSAgXCIoXCIgcGFydCAoIFwifFwiIHBhcnQgKSsgXCIpXCIgO1xuXG4gICAgICBncm91cE9mUGFydHMgICAgICAgICA6Oj0gIFwiKFwiIHBhcnQgcGFydCsgXCIpXCIgO1xuXG4gICAgICBydWxlTmFtZSAgICAgICAgICAgICA6Oj0gIFtuYW1lXSA7XG5cbiAgICAgIHJlZ3VsYXJFeHByZXNzaW9uICAgIDo6PSAgW3JlZ3VsYXItZXhwcmVzc2lvbl0gO1xuXG4gICAgICBzaWduaWZpY2FudFRva2VuVHlwZSA6Oj0gIFt0eXBlXSA7XG5cbiAgICAgIHRlcm1pbmFsU3ltYm9sICAgICAgIDo6PSAgW3N0cmluZy1saXRlcmFsXSA7XG5cbiAgICAgIGVuZE9mTGluZSAgICAgICAgICAgIDo6PSAgXCI8RU5EX09GX0xJTkU+XCIgO1xuXG4gICAgICBlcHNpbG9uICAgICAgICAgICAgICA6Oj0gIFwizrVcIiA7XG5cbiAgICAgIHdpbGRjYXJkICAgICAgICAgICAgIDo6PSAgXCIuXCIgO1xuXG4gICAgICBtb2RpZmllciAgICAgICAgICAgICA6Oj0gIG9wdGlvbmFsTW9kaWZpZXJcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICB6ZXJvT3JNb3JlTW9kaWZpZXJcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICBvbmVPck1vcmVNb2RpZmllclxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDtcblxuICAgICAgb3B0aW9uYWxNb2RpZmllciAgICAgOjo9ICA8Tk9fV0hJVEVTUEFDRT5cIj9cIiA7XG5cbiAgICAgIHplcm9Pck1vcmVNb2RpZmllciAgIDo6PSAgPE5PX1dISVRFU1BBQ0U+XCIqXCIgO1xuXG4gICAgICBvbmVPck1vcmVNb2RpZmllciAgICA6Oj0gIDxOT19XSElURVNQQUNFPlwiK1wiIDtcblxuICAgICAgbG9va0FoZWFkTW9kaWZpZXIgICAgOjo9ICA8Tk9fV0hJVEVTUEFDRT5cIiFcIiA7XG5cbiAgICAgIGVycm9yICAgICAgICAgICAgICAgIDo6PSAgLiA7XG5cbmA7XG4iXX0=