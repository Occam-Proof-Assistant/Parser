"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SignificantTokenTypeRuleName = exports.ZeroOrMoreQuantifierRuleName = exports.OneOrMoreQuantifierRuleName = exports.OptionalQuantifierRuleName = exports.RegularExpressionRuleName = exports.LookAheadModifierRuleName = exports.NoWhitespacePartRuleName = exports.SequenceOfPartsRuleName = exports.NonTerminalPartRuleName = exports.TerminalSymbolRuleName = exports.ChoiceOfPartsRuleName = exports.TerminalPartRuleName = exports.DefinitionsRuleName = exports.QuantifierRuleName = exports.DefinitionRuleName = exports.EndOfLineRuleName = exports.WildcardRuleName = exports.DocumentRuleName = exports.RuleNameRuleName = exports.EpsilonRuleName = exports.ErrorRuleName = exports.RuleRuleName = exports.PartRuleName = exports.NameRuleName = void 0;
var NameRuleName = "name";
exports.NameRuleName = NameRuleName;
var PartRuleName = "part";
exports.PartRuleName = PartRuleName;
var RuleRuleName = "rule";
exports.RuleRuleName = RuleRuleName;
var ErrorRuleName = "error";
exports.ErrorRuleName = ErrorRuleName;
var EpsilonRuleName = "epsilon";
exports.EpsilonRuleName = EpsilonRuleName;
var RuleNameRuleName = "ruleName";
exports.RuleNameRuleName = RuleNameRuleName;
var DocumentRuleName = "document";
exports.DocumentRuleName = DocumentRuleName;
var WildcardRuleName = "wildcard";
exports.WildcardRuleName = WildcardRuleName;
var EndOfLineRuleName = "endOfLine";
exports.EndOfLineRuleName = EndOfLineRuleName;
var DefinitionRuleName = "definition";
exports.DefinitionRuleName = DefinitionRuleName;
var QuantifierRuleName = "quantifier";
exports.QuantifierRuleName = QuantifierRuleName;
var DefinitionsRuleName = "definitions";
exports.DefinitionsRuleName = DefinitionsRuleName;
var TerminalPartRuleName = "terminalPart";
exports.TerminalPartRuleName = TerminalPartRuleName;
var ChoiceOfPartsRuleName = "choiceOfParts";
exports.ChoiceOfPartsRuleName = ChoiceOfPartsRuleName;
var TerminalSymbolRuleName = "terminalSymbol";
exports.TerminalSymbolRuleName = TerminalSymbolRuleName;
var NonTerminalPartRuleName = "nonTerminalPart";
exports.NonTerminalPartRuleName = NonTerminalPartRuleName;
var SequenceOfPartsRuleName = "sequenceOfParts";
exports.SequenceOfPartsRuleName = SequenceOfPartsRuleName;
var NoWhitespacePartRuleName = "noWhitespacePart";
exports.NoWhitespacePartRuleName = NoWhitespacePartRuleName;
var LookAheadModifierRuleName = "lookAheadModifier";
exports.LookAheadModifierRuleName = LookAheadModifierRuleName;
var RegularExpressionRuleName = "regularExpression";
exports.RegularExpressionRuleName = RegularExpressionRuleName;
var OptionalQuantifierRuleName = "optionalQuantifier";
exports.OptionalQuantifierRuleName = OptionalQuantifierRuleName;
var OneOrMoreQuantifierRuleName = "oneOrMoreQuantifier";
exports.OneOrMoreQuantifierRuleName = OneOrMoreQuantifierRuleName;
var ZeroOrMoreQuantifierRuleName = "zeroOrMoreQuantifier";
exports.ZeroOrMoreQuantifierRuleName = ZeroOrMoreQuantifierRuleName;
var SignificantTokenTypeRuleName = "significantTokenType";
exports.SignificantTokenTypeRuleName = SignificantTokenTypeRuleName;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ibmYvcnVsZU5hbWVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnQgY29uc3QgTmFtZVJ1bGVOYW1lID0gXCJuYW1lXCI7XG5leHBvcnQgY29uc3QgUGFydFJ1bGVOYW1lID0gXCJwYXJ0XCI7XG5leHBvcnQgY29uc3QgUnVsZVJ1bGVOYW1lID0gXCJydWxlXCI7XG5leHBvcnQgY29uc3QgRXJyb3JSdWxlTmFtZSA9IFwiZXJyb3JcIjtcbmV4cG9ydCBjb25zdCBFcHNpbG9uUnVsZU5hbWUgPSBcImVwc2lsb25cIjtcbmV4cG9ydCBjb25zdCBSdWxlTmFtZVJ1bGVOYW1lID0gXCJydWxlTmFtZVwiO1xuZXhwb3J0IGNvbnN0IERvY3VtZW50UnVsZU5hbWUgPSBcImRvY3VtZW50XCI7XG5leHBvcnQgY29uc3QgV2lsZGNhcmRSdWxlTmFtZSA9IFwid2lsZGNhcmRcIjtcbmV4cG9ydCBjb25zdCBFbmRPZkxpbmVSdWxlTmFtZSA9IFwiZW5kT2ZMaW5lXCI7XG5leHBvcnQgY29uc3QgRGVmaW5pdGlvblJ1bGVOYW1lID0gXCJkZWZpbml0aW9uXCI7XG5leHBvcnQgY29uc3QgUXVhbnRpZmllclJ1bGVOYW1lID0gXCJxdWFudGlmaWVyXCI7XG5leHBvcnQgY29uc3QgRGVmaW5pdGlvbnNSdWxlTmFtZSA9IFwiZGVmaW5pdGlvbnNcIjtcbmV4cG9ydCBjb25zdCBUZXJtaW5hbFBhcnRSdWxlTmFtZSA9IFwidGVybWluYWxQYXJ0XCI7XG5leHBvcnQgY29uc3QgQ2hvaWNlT2ZQYXJ0c1J1bGVOYW1lID0gXCJjaG9pY2VPZlBhcnRzXCI7XG5leHBvcnQgY29uc3QgVGVybWluYWxTeW1ib2xSdWxlTmFtZSA9IFwidGVybWluYWxTeW1ib2xcIjtcbmV4cG9ydCBjb25zdCBOb25UZXJtaW5hbFBhcnRSdWxlTmFtZSA9IFwibm9uVGVybWluYWxQYXJ0XCI7XG5leHBvcnQgY29uc3QgU2VxdWVuY2VPZlBhcnRzUnVsZU5hbWUgPSBcInNlcXVlbmNlT2ZQYXJ0c1wiO1xuZXhwb3J0IGNvbnN0IE5vV2hpdGVzcGFjZVBhcnRSdWxlTmFtZSA9IFwibm9XaGl0ZXNwYWNlUGFydFwiO1xuZXhwb3J0IGNvbnN0IExvb2tBaGVhZE1vZGlmaWVyUnVsZU5hbWUgPSBcImxvb2tBaGVhZE1vZGlmaWVyXCI7XG5leHBvcnQgY29uc3QgUmVndWxhckV4cHJlc3Npb25SdWxlTmFtZSA9IFwicmVndWxhckV4cHJlc3Npb25cIjtcbmV4cG9ydCBjb25zdCBPcHRpb25hbFF1YW50aWZpZXJSdWxlTmFtZSA9IFwib3B0aW9uYWxRdWFudGlmaWVyXCI7XG5leHBvcnQgY29uc3QgT25lT3JNb3JlUXVhbnRpZmllclJ1bGVOYW1lID0gXCJvbmVPck1vcmVRdWFudGlmaWVyXCI7XG5leHBvcnQgY29uc3QgWmVyb09yTW9yZVF1YW50aWZpZXJSdWxlTmFtZSA9IFwiemVyb09yTW9yZVF1YW50aWZpZXJcIjtcbmV4cG9ydCBjb25zdCBTaWduaWZpY2FudFRva2VuVHlwZVJ1bGVOYW1lID0gXCJzaWduaWZpY2FudFRva2VuVHlwZVwiO1xuXG4iXSwibmFtZXMiOlsiTmFtZVJ1bGVOYW1lIiwiUGFydFJ1bGVOYW1lIiwiUnVsZVJ1bGVOYW1lIiwiRXJyb3JSdWxlTmFtZSIsIkVwc2lsb25SdWxlTmFtZSIsIlJ1bGVOYW1lUnVsZU5hbWUiLCJEb2N1bWVudFJ1bGVOYW1lIiwiV2lsZGNhcmRSdWxlTmFtZSIsIkVuZE9mTGluZVJ1bGVOYW1lIiwiRGVmaW5pdGlvblJ1bGVOYW1lIiwiUXVhbnRpZmllclJ1bGVOYW1lIiwiRGVmaW5pdGlvbnNSdWxlTmFtZSIsIlRlcm1pbmFsUGFydFJ1bGVOYW1lIiwiQ2hvaWNlT2ZQYXJ0c1J1bGVOYW1lIiwiVGVybWluYWxTeW1ib2xSdWxlTmFtZSIsIk5vblRlcm1pbmFsUGFydFJ1bGVOYW1lIiwiU2VxdWVuY2VPZlBhcnRzUnVsZU5hbWUiLCJOb1doaXRlc3BhY2VQYXJ0UnVsZU5hbWUiLCJMb29rQWhlYWRNb2RpZmllclJ1bGVOYW1lIiwiUmVndWxhckV4cHJlc3Npb25SdWxlTmFtZSIsIk9wdGlvbmFsUXVhbnRpZmllclJ1bGVOYW1lIiwiT25lT3JNb3JlUXVhbnRpZmllclJ1bGVOYW1lIiwiWmVyb09yTW9yZVF1YW50aWZpZXJSdWxlTmFtZSIsIlNpZ25pZmljYW50VG9rZW5UeXBlUnVsZU5hbWUiXSwibWFwcGluZ3MiOiJBQUFBLENBQVk7Ozs7O0FBRUwsR0FBSyxDQUFDQSxZQUFZLEdBQUcsQ0FBTTtRQUFyQkEsWUFBWSxHQUFaQSxZQUFZO0FBQ2xCLEdBQUssQ0FBQ0MsWUFBWSxHQUFHLENBQU07UUFBckJBLFlBQVksR0FBWkEsWUFBWTtBQUNsQixHQUFLLENBQUNDLFlBQVksR0FBRyxDQUFNO1FBQXJCQSxZQUFZLEdBQVpBLFlBQVk7QUFDbEIsR0FBSyxDQUFDQyxhQUFhLEdBQUcsQ0FBTztRQUF2QkEsYUFBYSxHQUFiQSxhQUFhO0FBQ25CLEdBQUssQ0FBQ0MsZUFBZSxHQUFHLENBQVM7UUFBM0JBLGVBQWUsR0FBZkEsZUFBZTtBQUNyQixHQUFLLENBQUNDLGdCQUFnQixHQUFHLENBQVU7UUFBN0JBLGdCQUFnQixHQUFoQkEsZ0JBQWdCO0FBQ3RCLEdBQUssQ0FBQ0MsZ0JBQWdCLEdBQUcsQ0FBVTtRQUE3QkEsZ0JBQWdCLEdBQWhCQSxnQkFBZ0I7QUFDdEIsR0FBSyxDQUFDQyxnQkFBZ0IsR0FBRyxDQUFVO1FBQTdCQSxnQkFBZ0IsR0FBaEJBLGdCQUFnQjtBQUN0QixHQUFLLENBQUNDLGlCQUFpQixHQUFHLENBQVc7UUFBL0JBLGlCQUFpQixHQUFqQkEsaUJBQWlCO0FBQ3ZCLEdBQUssQ0FBQ0Msa0JBQWtCLEdBQUcsQ0FBWTtRQUFqQ0Esa0JBQWtCLEdBQWxCQSxrQkFBa0I7QUFDeEIsR0FBSyxDQUFDQyxrQkFBa0IsR0FBRyxDQUFZO1FBQWpDQSxrQkFBa0IsR0FBbEJBLGtCQUFrQjtBQUN4QixHQUFLLENBQUNDLG1CQUFtQixHQUFHLENBQWE7UUFBbkNBLG1CQUFtQixHQUFuQkEsbUJBQW1CO0FBQ3pCLEdBQUssQ0FBQ0Msb0JBQW9CLEdBQUcsQ0FBYztRQUFyQ0Esb0JBQW9CLEdBQXBCQSxvQkFBb0I7QUFDMUIsR0FBSyxDQUFDQyxxQkFBcUIsR0FBRyxDQUFlO1FBQXZDQSxxQkFBcUIsR0FBckJBLHFCQUFxQjtBQUMzQixHQUFLLENBQUNDLHNCQUFzQixHQUFHLENBQWdCO1FBQXpDQSxzQkFBc0IsR0FBdEJBLHNCQUFzQjtBQUM1QixHQUFLLENBQUNDLHVCQUF1QixHQUFHLENBQWlCO1FBQTNDQSx1QkFBdUIsR0FBdkJBLHVCQUF1QjtBQUM3QixHQUFLLENBQUNDLHVCQUF1QixHQUFHLENBQWlCO1FBQTNDQSx1QkFBdUIsR0FBdkJBLHVCQUF1QjtBQUM3QixHQUFLLENBQUNDLHdCQUF3QixHQUFHLENBQWtCO1FBQTdDQSx3QkFBd0IsR0FBeEJBLHdCQUF3QjtBQUM5QixHQUFLLENBQUNDLHlCQUF5QixHQUFHLENBQW1CO1FBQS9DQSx5QkFBeUIsR0FBekJBLHlCQUF5QjtBQUMvQixHQUFLLENBQUNDLHlCQUF5QixHQUFHLENBQW1CO1FBQS9DQSx5QkFBeUIsR0FBekJBLHlCQUF5QjtBQUMvQixHQUFLLENBQUNDLDBCQUEwQixHQUFHLENBQW9CO1FBQWpEQSwwQkFBMEIsR0FBMUJBLDBCQUEwQjtBQUNoQyxHQUFLLENBQUNDLDJCQUEyQixHQUFHLENBQXFCO1FBQW5EQSwyQkFBMkIsR0FBM0JBLDJCQUEyQjtBQUNqQyxHQUFLLENBQUNDLDRCQUE0QixHQUFHLENBQXNCO1FBQXJEQSw0QkFBNEIsR0FBNUJBLDRCQUE0QjtBQUNsQyxHQUFLLENBQUNDLDRCQUE0QixHQUFHLENBQXNCO1FBQXJEQSw0QkFBNEIsR0FBNUJBLDRCQUE0QiJ9