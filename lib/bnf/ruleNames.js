"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SignificantTokenTypeRuleName = exports.ZeroOrMoreQuantifierRuleName = exports.OneOrMoreQuantifierRuleName = exports.OptionalQuantifierRuleName = exports.RegularExpressionRuleName = exports.LookAheadModifierRuleName = exports.NoWhitespacePartRuleName = exports.NonTerminalPartRuleName = exports.TerminalSymbolRuleName = exports.ChoiceOfPartsRuleName = exports.TerminalPartRuleName = exports.GroupOfPartsRuleName = exports.DefinitionsRuleName = exports.QuantifierRuleName = exports.DefinitionRuleName = exports.EndOfLineRuleName = exports.WildcardRuleName = exports.DocumentRuleName = exports.RuleNameRuleName = exports.EpsilonRuleName = exports.ErrorRuleName = exports.RuleRuleName = exports.PartRuleName = exports.NameRuleName = void 0;
var NameRuleName = "name";
exports.NameRuleName = NameRuleName;
var PartRuleName = "part";
exports.PartRuleName = PartRuleName;
var RuleRuleName = "rule";
exports.RuleRuleName = RuleRuleName;
var ErrorRuleName = "error";
exports.ErrorRuleName = ErrorRuleName;
var EpsilonRuleName = "epsilon";
exports.EpsilonRuleName = EpsilonRuleName;
var RuleNameRuleName = "ruleName";
exports.RuleNameRuleName = RuleNameRuleName;
var DocumentRuleName = "document";
exports.DocumentRuleName = DocumentRuleName;
var WildcardRuleName = "wildcard";
exports.WildcardRuleName = WildcardRuleName;
var EndOfLineRuleName = "endOfLine";
exports.EndOfLineRuleName = EndOfLineRuleName;
var DefinitionRuleName = "definition";
exports.DefinitionRuleName = DefinitionRuleName;
var QuantifierRuleName = "quantifier";
exports.QuantifierRuleName = QuantifierRuleName;
var DefinitionsRuleName = "definitions";
exports.DefinitionsRuleName = DefinitionsRuleName;
var GroupOfPartsRuleName = "groupOfParts";
exports.GroupOfPartsRuleName = GroupOfPartsRuleName;
var TerminalPartRuleName = "terminalPart";
exports.TerminalPartRuleName = TerminalPartRuleName;
var ChoiceOfPartsRuleName = "choiceOfParts";
exports.ChoiceOfPartsRuleName = ChoiceOfPartsRuleName;
var TerminalSymbolRuleName = "terminalSymbol";
exports.TerminalSymbolRuleName = TerminalSymbolRuleName;
var NonTerminalPartRuleName = "nonTerminalPart";
exports.NonTerminalPartRuleName = NonTerminalPartRuleName;
var NoWhitespacePartRuleName = "noWhitespacePart";
exports.NoWhitespacePartRuleName = NoWhitespacePartRuleName;
var LookAheadModifierRuleName = "lookAheadModifier";
exports.LookAheadModifierRuleName = LookAheadModifierRuleName;
var RegularExpressionRuleName = "regularExpression";
exports.RegularExpressionRuleName = RegularExpressionRuleName;
var OptionalQuantifierRuleName = "optionalQuantifier";
exports.OptionalQuantifierRuleName = OptionalQuantifierRuleName;
var OneOrMoreQuantifierRuleName = "oneOrMoreQuantifier";
exports.OneOrMoreQuantifierRuleName = OneOrMoreQuantifierRuleName;
var ZeroOrMoreQuantifierRuleName = "zeroOrMoreQuantifier";
exports.ZeroOrMoreQuantifierRuleName = ZeroOrMoreQuantifierRuleName;
var SignificantTokenTypeRuleName = "significantTokenType";
exports.SignificantTokenTypeRuleName = SignificantTokenTypeRuleName;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJ1bGVOYW1lcy5qcyJdLCJuYW1lcyI6WyJOYW1lUnVsZU5hbWUiLCJQYXJ0UnVsZU5hbWUiLCJSdWxlUnVsZU5hbWUiLCJFcnJvclJ1bGVOYW1lIiwiRXBzaWxvblJ1bGVOYW1lIiwiUnVsZU5hbWVSdWxlTmFtZSIsIkRvY3VtZW50UnVsZU5hbWUiLCJXaWxkY2FyZFJ1bGVOYW1lIiwiRW5kT2ZMaW5lUnVsZU5hbWUiLCJEZWZpbml0aW9uUnVsZU5hbWUiLCJRdWFudGlmaWVyUnVsZU5hbWUiLCJEZWZpbml0aW9uc1J1bGVOYW1lIiwiR3JvdXBPZlBhcnRzUnVsZU5hbWUiLCJUZXJtaW5hbFBhcnRSdWxlTmFtZSIsIkNob2ljZU9mUGFydHNSdWxlTmFtZSIsIlRlcm1pbmFsU3ltYm9sUnVsZU5hbWUiLCJOb25UZXJtaW5hbFBhcnRSdWxlTmFtZSIsIk5vV2hpdGVzcGFjZVBhcnRSdWxlTmFtZSIsIkxvb2tBaGVhZE1vZGlmaWVyUnVsZU5hbWUiLCJSZWd1bGFyRXhwcmVzc2lvblJ1bGVOYW1lIiwiT3B0aW9uYWxRdWFudGlmaWVyUnVsZU5hbWUiLCJPbmVPck1vcmVRdWFudGlmaWVyUnVsZU5hbWUiLCJaZXJvT3JNb3JlUXVhbnRpZmllclJ1bGVOYW1lIiwiU2lnbmlmaWNhbnRUb2tlblR5cGVSdWxlTmFtZSJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQUVPLElBQU1BLFlBQVksR0FBRyxNQUFyQjs7QUFDQSxJQUFNQyxZQUFZLEdBQUcsTUFBckI7O0FBQ0EsSUFBTUMsWUFBWSxHQUFHLE1BQXJCOztBQUNBLElBQU1DLGFBQWEsR0FBRyxPQUF0Qjs7QUFDQSxJQUFNQyxlQUFlLEdBQUcsU0FBeEI7O0FBQ0EsSUFBTUMsZ0JBQWdCLEdBQUcsVUFBekI7O0FBQ0EsSUFBTUMsZ0JBQWdCLEdBQUcsVUFBekI7O0FBQ0EsSUFBTUMsZ0JBQWdCLEdBQUcsVUFBekI7O0FBQ0EsSUFBTUMsaUJBQWlCLEdBQUcsV0FBMUI7O0FBQ0EsSUFBTUMsa0JBQWtCLEdBQUcsWUFBM0I7O0FBQ0EsSUFBTUMsa0JBQWtCLEdBQUcsWUFBM0I7O0FBQ0EsSUFBTUMsbUJBQW1CLEdBQUcsYUFBNUI7O0FBQ0EsSUFBTUMsb0JBQW9CLEdBQUcsY0FBN0I7O0FBQ0EsSUFBTUMsb0JBQW9CLEdBQUcsY0FBN0I7O0FBQ0EsSUFBTUMscUJBQXFCLEdBQUcsZUFBOUI7O0FBQ0EsSUFBTUMsc0JBQXNCLEdBQUcsZ0JBQS9COztBQUNBLElBQU1DLHVCQUF1QixHQUFHLGlCQUFoQzs7QUFDQSxJQUFNQyx3QkFBd0IsR0FBRyxrQkFBakM7O0FBQ0EsSUFBTUMseUJBQXlCLEdBQUcsbUJBQWxDOztBQUNBLElBQU1DLHlCQUF5QixHQUFHLG1CQUFsQzs7QUFDQSxJQUFNQywwQkFBMEIsR0FBRyxvQkFBbkM7O0FBQ0EsSUFBTUMsMkJBQTJCLEdBQUcscUJBQXBDOztBQUNBLElBQU1DLDRCQUE0QixHQUFHLHNCQUFyQzs7QUFDQSxJQUFNQyw0QkFBNEIsR0FBRyxzQkFBckMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGNvbnN0IE5hbWVSdWxlTmFtZSA9IFwibmFtZVwiO1xuZXhwb3J0IGNvbnN0IFBhcnRSdWxlTmFtZSA9IFwicGFydFwiO1xuZXhwb3J0IGNvbnN0IFJ1bGVSdWxlTmFtZSA9IFwicnVsZVwiO1xuZXhwb3J0IGNvbnN0IEVycm9yUnVsZU5hbWUgPSBcImVycm9yXCI7XG5leHBvcnQgY29uc3QgRXBzaWxvblJ1bGVOYW1lID0gXCJlcHNpbG9uXCI7XG5leHBvcnQgY29uc3QgUnVsZU5hbWVSdWxlTmFtZSA9IFwicnVsZU5hbWVcIjtcbmV4cG9ydCBjb25zdCBEb2N1bWVudFJ1bGVOYW1lID0gXCJkb2N1bWVudFwiO1xuZXhwb3J0IGNvbnN0IFdpbGRjYXJkUnVsZU5hbWUgPSBcIndpbGRjYXJkXCI7XG5leHBvcnQgY29uc3QgRW5kT2ZMaW5lUnVsZU5hbWUgPSBcImVuZE9mTGluZVwiO1xuZXhwb3J0IGNvbnN0IERlZmluaXRpb25SdWxlTmFtZSA9IFwiZGVmaW5pdGlvblwiO1xuZXhwb3J0IGNvbnN0IFF1YW50aWZpZXJSdWxlTmFtZSA9IFwicXVhbnRpZmllclwiO1xuZXhwb3J0IGNvbnN0IERlZmluaXRpb25zUnVsZU5hbWUgPSBcImRlZmluaXRpb25zXCI7XG5leHBvcnQgY29uc3QgR3JvdXBPZlBhcnRzUnVsZU5hbWUgPSBcImdyb3VwT2ZQYXJ0c1wiO1xuZXhwb3J0IGNvbnN0IFRlcm1pbmFsUGFydFJ1bGVOYW1lID0gXCJ0ZXJtaW5hbFBhcnRcIjtcbmV4cG9ydCBjb25zdCBDaG9pY2VPZlBhcnRzUnVsZU5hbWUgPSBcImNob2ljZU9mUGFydHNcIjtcbmV4cG9ydCBjb25zdCBUZXJtaW5hbFN5bWJvbFJ1bGVOYW1lID0gXCJ0ZXJtaW5hbFN5bWJvbFwiO1xuZXhwb3J0IGNvbnN0IE5vblRlcm1pbmFsUGFydFJ1bGVOYW1lID0gXCJub25UZXJtaW5hbFBhcnRcIjtcbmV4cG9ydCBjb25zdCBOb1doaXRlc3BhY2VQYXJ0UnVsZU5hbWUgPSBcIm5vV2hpdGVzcGFjZVBhcnRcIjtcbmV4cG9ydCBjb25zdCBMb29rQWhlYWRNb2RpZmllclJ1bGVOYW1lID0gXCJsb29rQWhlYWRNb2RpZmllclwiO1xuZXhwb3J0IGNvbnN0IFJlZ3VsYXJFeHByZXNzaW9uUnVsZU5hbWUgPSBcInJlZ3VsYXJFeHByZXNzaW9uXCI7XG5leHBvcnQgY29uc3QgT3B0aW9uYWxRdWFudGlmaWVyUnVsZU5hbWUgPSBcIm9wdGlvbmFsUXVhbnRpZmllclwiO1xuZXhwb3J0IGNvbnN0IE9uZU9yTW9yZVF1YW50aWZpZXJSdWxlTmFtZSA9IFwib25lT3JNb3JlUXVhbnRpZmllclwiO1xuZXhwb3J0IGNvbnN0IFplcm9Pck1vcmVRdWFudGlmaWVyUnVsZU5hbWUgPSBcInplcm9Pck1vcmVRdWFudGlmaWVyXCI7XG5leHBvcnQgY29uc3QgU2lnbmlmaWNhbnRUb2tlblR5cGVSdWxlTmFtZSA9IFwic2lnbmlmaWNhbnRUb2tlblR5cGVcIjtcblxuIl19