'use strict';

var grammar = '\n\n    theorem                         ::=   theoremDeclaration premise(s)? conclusion proof\n    \n    theoremDeclaration              ::=   Theorem parenthesisedLabel? <END_OF_LINE>\n    \n    \n    \n    lemma                           ::=   lemmaDeclaration premise(s)? conclusion proof\n    \n    lemmaDeclaration                ::=   Lemma parenthesisedLabel? <END_OF_LINE>\n    \n    \n    \n    rule                            ::=   ruleDeclaration premise(s) conclusion proof?\n    \n    ruleDeclaration                 ::=   Rule parenthesisedLabel? <END_OF_LINE>\n    \n    \n    \n    premise(s)                      ::=   premise | premises\n    \n    premise                         ::=   premiseDeclaration (labelled)statement\n    \n    premises                        ::=   premisesDeclaration (labelled)statement+\n    \n    premiseDeclaration              ::=   Premise <END_OF_LINE>\n    \n    premisesDeclaration             ::=   Premises <END_OF_LINE>\n    \n    \n\n    conclusion                      ::=   conclusionDeclaration statement\n    \n    conclusionDeclaration           ::=   Conclusion <END_OF_LINE>\n    \n    \n\n    proof                           ::=   proofDeclaration subLemmaOr(labelled)statement* hence\n    \n    proofDeclaration                ::=   Proof <END_OF_LINE>\n    \n    \n\n    subLemmaOr(labelled)statement   ::=   subLemma | (labelled)statement\n\n    subLemma                        ::=   suppose then? hence\n    \n    suppose                         ::=   supposeDeclaration statement\n    \n    supposeDeclaration              ::=   Suppose <END_OF_LINE>\n    \n    then                            ::=   thenDeclaration (labelled)statement+\n    \n    thenDeclaration                 ::=   Then <END_OF_LINE>\n    \n    hence                           ::=   henceDeclaration statement\n    \n    henceDeclaration                ::=   Hence <END_OF_LINE>\n    \n    \n\n    (labelled)statement             ::=   labelledStatement | statement\n    \n    labelledStatement               ::=   undefined+ by label <END_OF_LINE>\n    \n    statement                       ::=   undefined+ <END_OF_LINE>\n    \n    label                           ::=   /[^)]+/\n    \n    parenthesisedLabel              ::=   /\\([^)]+\\)/\n    \n';

module.exports = grammar;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9ncmFtbWFyL2Zsb3JlbmNlLmpzIl0sIm5hbWVzIjpbImdyYW1tYXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFJQSwrdkVBQUo7O0FBMEVBQyxPQUFPQyxPQUFQLEdBQWlCRixPQUFqQiIsImZpbGUiOiJmbG9yZW5jZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGdyYW1tYXIgPSBgXG5cbiAgICB0aGVvcmVtICAgICAgICAgICAgICAgICAgICAgICAgIDo6PSAgIHRoZW9yZW1EZWNsYXJhdGlvbiBwcmVtaXNlKHMpPyBjb25jbHVzaW9uIHByb29mXG4gICAgXG4gICAgdGhlb3JlbURlY2xhcmF0aW9uICAgICAgICAgICAgICA6Oj0gICBUaGVvcmVtIHBhcmVudGhlc2lzZWRMYWJlbD8gPEVORF9PRl9MSU5FPlxuICAgIFxuICAgIFxuICAgIFxuICAgIGxlbW1hICAgICAgICAgICAgICAgICAgICAgICAgICAgOjo9ICAgbGVtbWFEZWNsYXJhdGlvbiBwcmVtaXNlKHMpPyBjb25jbHVzaW9uIHByb29mXG4gICAgXG4gICAgbGVtbWFEZWNsYXJhdGlvbiAgICAgICAgICAgICAgICA6Oj0gICBMZW1tYSBwYXJlbnRoZXNpc2VkTGFiZWw/IDxFTkRfT0ZfTElORT5cbiAgICBcbiAgICBcbiAgICBcbiAgICBydWxlICAgICAgICAgICAgICAgICAgICAgICAgICAgIDo6PSAgIHJ1bGVEZWNsYXJhdGlvbiBwcmVtaXNlKHMpIGNvbmNsdXNpb24gcHJvb2Y/XG4gICAgXG4gICAgcnVsZURlY2xhcmF0aW9uICAgICAgICAgICAgICAgICA6Oj0gICBSdWxlIHBhcmVudGhlc2lzZWRMYWJlbD8gPEVORF9PRl9MSU5FPlxuICAgIFxuICAgIFxuICAgIFxuICAgIHByZW1pc2UocykgICAgICAgICAgICAgICAgICAgICAgOjo9ICAgcHJlbWlzZSB8IHByZW1pc2VzXG4gICAgXG4gICAgcHJlbWlzZSAgICAgICAgICAgICAgICAgICAgICAgICA6Oj0gICBwcmVtaXNlRGVjbGFyYXRpb24gKGxhYmVsbGVkKXN0YXRlbWVudFxuICAgIFxuICAgIHByZW1pc2VzICAgICAgICAgICAgICAgICAgICAgICAgOjo9ICAgcHJlbWlzZXNEZWNsYXJhdGlvbiAobGFiZWxsZWQpc3RhdGVtZW50K1xuICAgIFxuICAgIHByZW1pc2VEZWNsYXJhdGlvbiAgICAgICAgICAgICAgOjo9ICAgUHJlbWlzZSA8RU5EX09GX0xJTkU+XG4gICAgXG4gICAgcHJlbWlzZXNEZWNsYXJhdGlvbiAgICAgICAgICAgICA6Oj0gICBQcmVtaXNlcyA8RU5EX09GX0xJTkU+XG4gICAgXG4gICAgXG5cbiAgICBjb25jbHVzaW9uICAgICAgICAgICAgICAgICAgICAgIDo6PSAgIGNvbmNsdXNpb25EZWNsYXJhdGlvbiBzdGF0ZW1lbnRcbiAgICBcbiAgICBjb25jbHVzaW9uRGVjbGFyYXRpb24gICAgICAgICAgIDo6PSAgIENvbmNsdXNpb24gPEVORF9PRl9MSU5FPlxuICAgIFxuICAgIFxuXG4gICAgcHJvb2YgICAgICAgICAgICAgICAgICAgICAgICAgICA6Oj0gICBwcm9vZkRlY2xhcmF0aW9uIHN1YkxlbW1hT3IobGFiZWxsZWQpc3RhdGVtZW50KiBoZW5jZVxuICAgIFxuICAgIHByb29mRGVjbGFyYXRpb24gICAgICAgICAgICAgICAgOjo9ICAgUHJvb2YgPEVORF9PRl9MSU5FPlxuICAgIFxuICAgIFxuXG4gICAgc3ViTGVtbWFPcihsYWJlbGxlZClzdGF0ZW1lbnQgICA6Oj0gICBzdWJMZW1tYSB8IChsYWJlbGxlZClzdGF0ZW1lbnRcblxuICAgIHN1YkxlbW1hICAgICAgICAgICAgICAgICAgICAgICAgOjo9ICAgc3VwcG9zZSB0aGVuPyBoZW5jZVxuICAgIFxuICAgIHN1cHBvc2UgICAgICAgICAgICAgICAgICAgICAgICAgOjo9ICAgc3VwcG9zZURlY2xhcmF0aW9uIHN0YXRlbWVudFxuICAgIFxuICAgIHN1cHBvc2VEZWNsYXJhdGlvbiAgICAgICAgICAgICAgOjo9ICAgU3VwcG9zZSA8RU5EX09GX0xJTkU+XG4gICAgXG4gICAgdGhlbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6Oj0gICB0aGVuRGVjbGFyYXRpb24gKGxhYmVsbGVkKXN0YXRlbWVudCtcbiAgICBcbiAgICB0aGVuRGVjbGFyYXRpb24gICAgICAgICAgICAgICAgIDo6PSAgIFRoZW4gPEVORF9PRl9MSU5FPlxuICAgIFxuICAgIGhlbmNlICAgICAgICAgICAgICAgICAgICAgICAgICAgOjo9ICAgaGVuY2VEZWNsYXJhdGlvbiBzdGF0ZW1lbnRcbiAgICBcbiAgICBoZW5jZURlY2xhcmF0aW9uICAgICAgICAgICAgICAgIDo6PSAgIEhlbmNlIDxFTkRfT0ZfTElORT5cbiAgICBcbiAgICBcblxuICAgIChsYWJlbGxlZClzdGF0ZW1lbnQgICAgICAgICAgICAgOjo9ICAgbGFiZWxsZWRTdGF0ZW1lbnQgfCBzdGF0ZW1lbnRcbiAgICBcbiAgICBsYWJlbGxlZFN0YXRlbWVudCAgICAgICAgICAgICAgIDo6PSAgIHVuZGVmaW5lZCsgYnkgbGFiZWwgPEVORF9PRl9MSU5FPlxuICAgIFxuICAgIHN0YXRlbWVudCAgICAgICAgICAgICAgICAgICAgICAgOjo9ICAgdW5kZWZpbmVkKyA8RU5EX09GX0xJTkU+XG4gICAgXG4gICAgbGFiZWwgICAgICAgICAgICAgICAgICAgICAgICAgICA6Oj0gICAvW14pXSsvXG4gICAgXG4gICAgcGFyZW50aGVzaXNlZExhYmVsICAgICAgICAgICAgICA6Oj0gICAvXFxcXChbXildK1xcXFwpL1xuICAgIFxuYDtcblxubW9kdWxlLmV4cG9ydHMgPSBncmFtbWFyO1xuIl19