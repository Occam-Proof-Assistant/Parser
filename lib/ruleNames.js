"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SignificantTokenTypeRuleName = exports.ZeroOrMoreQuantifierRuleName = exports.OneOrMoreQuantifierRuleName = exports.OptionalQuantifierRuleName = exports.RegularExpressionRuleName = exports.LookAheadModifierRuleName = exports.NoWhitespacePartRuleName = exports.SequenceOfPartsRuleName = exports.NonTerminalPartRuleName = exports.TerminalSymbolRuleName = exports.ChoiceOfPartsRuleName = exports.TerminalPartRuleName = exports.DefinitionsRuleName = exports.QuantifierRuleName = exports.DefinitionRuleName = exports.EndOfLineRuleName = exports.WildcardRuleName = exports.DocumentRuleName = exports.RuleNameRuleName = exports.ErrorRuleName = exports.RuleRuleName = exports.PartRuleName = exports.NameRuleName = void 0;
var NameRuleName = "name";
exports.NameRuleName = NameRuleName;
var PartRuleName = "part";
exports.PartRuleName = PartRuleName;
var RuleRuleName = "rule";
exports.RuleRuleName = RuleRuleName;
var ErrorRuleName = "error";
exports.ErrorRuleName = ErrorRuleName;
var RuleNameRuleName = "ruleName";
exports.RuleNameRuleName = RuleNameRuleName;
var DocumentRuleName = "document";
exports.DocumentRuleName = DocumentRuleName;
var WildcardRuleName = "wildcard";
exports.WildcardRuleName = WildcardRuleName;
var EndOfLineRuleName = "endOfLine";
exports.EndOfLineRuleName = EndOfLineRuleName;
var DefinitionRuleName = "definition";
exports.DefinitionRuleName = DefinitionRuleName;
var QuantifierRuleName = "quantifier";
exports.QuantifierRuleName = QuantifierRuleName;
var DefinitionsRuleName = "definitions";
exports.DefinitionsRuleName = DefinitionsRuleName;
var TerminalPartRuleName = "terminalPart";
exports.TerminalPartRuleName = TerminalPartRuleName;
var ChoiceOfPartsRuleName = "choiceOfParts";
exports.ChoiceOfPartsRuleName = ChoiceOfPartsRuleName;
var TerminalSymbolRuleName = "terminalSymbol";
exports.TerminalSymbolRuleName = TerminalSymbolRuleName;
var NonTerminalPartRuleName = "nonTerminalPart";
exports.NonTerminalPartRuleName = NonTerminalPartRuleName;
var SequenceOfPartsRuleName = "sequenceOfParts";
exports.SequenceOfPartsRuleName = SequenceOfPartsRuleName;
var NoWhitespacePartRuleName = "noWhitespacePart";
exports.NoWhitespacePartRuleName = NoWhitespacePartRuleName;
var LookAheadModifierRuleName = "lookAheadModifier";
exports.LookAheadModifierRuleName = LookAheadModifierRuleName;
var RegularExpressionRuleName = "regularExpression";
exports.RegularExpressionRuleName = RegularExpressionRuleName;
var OptionalQuantifierRuleName = "optionalQuantifier";
exports.OptionalQuantifierRuleName = OptionalQuantifierRuleName;
var OneOrMoreQuantifierRuleName = "oneOrMoreQuantifier";
exports.OneOrMoreQuantifierRuleName = OneOrMoreQuantifierRuleName;
var ZeroOrMoreQuantifierRuleName = "zeroOrMoreQuantifier";
exports.ZeroOrMoreQuantifierRuleName = ZeroOrMoreQuantifierRuleName;
var SignificantTokenTypeRuleName = "significantTokenType";
exports.SignificantTokenTypeRuleName = SignificantTokenTypeRuleName;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9ydWxlTmFtZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydCBjb25zdCBOYW1lUnVsZU5hbWUgPSBcIm5hbWVcIjtcbmV4cG9ydCBjb25zdCBQYXJ0UnVsZU5hbWUgPSBcInBhcnRcIjtcbmV4cG9ydCBjb25zdCBSdWxlUnVsZU5hbWUgPSBcInJ1bGVcIjtcbmV4cG9ydCBjb25zdCBFcnJvclJ1bGVOYW1lID0gXCJlcnJvclwiO1xuZXhwb3J0IGNvbnN0IFJ1bGVOYW1lUnVsZU5hbWUgPSBcInJ1bGVOYW1lXCI7XG5leHBvcnQgY29uc3QgRG9jdW1lbnRSdWxlTmFtZSA9IFwiZG9jdW1lbnRcIjtcbmV4cG9ydCBjb25zdCBXaWxkY2FyZFJ1bGVOYW1lID0gXCJ3aWxkY2FyZFwiO1xuZXhwb3J0IGNvbnN0IEVuZE9mTGluZVJ1bGVOYW1lID0gXCJlbmRPZkxpbmVcIjtcbmV4cG9ydCBjb25zdCBEZWZpbml0aW9uUnVsZU5hbWUgPSBcImRlZmluaXRpb25cIjtcbmV4cG9ydCBjb25zdCBRdWFudGlmaWVyUnVsZU5hbWUgPSBcInF1YW50aWZpZXJcIjtcbmV4cG9ydCBjb25zdCBEZWZpbml0aW9uc1J1bGVOYW1lID0gXCJkZWZpbml0aW9uc1wiO1xuZXhwb3J0IGNvbnN0IFRlcm1pbmFsUGFydFJ1bGVOYW1lID0gXCJ0ZXJtaW5hbFBhcnRcIjtcbmV4cG9ydCBjb25zdCBDaG9pY2VPZlBhcnRzUnVsZU5hbWUgPSBcImNob2ljZU9mUGFydHNcIjtcbmV4cG9ydCBjb25zdCBUZXJtaW5hbFN5bWJvbFJ1bGVOYW1lID0gXCJ0ZXJtaW5hbFN5bWJvbFwiO1xuZXhwb3J0IGNvbnN0IE5vblRlcm1pbmFsUGFydFJ1bGVOYW1lID0gXCJub25UZXJtaW5hbFBhcnRcIjtcbmV4cG9ydCBjb25zdCBTZXF1ZW5jZU9mUGFydHNSdWxlTmFtZSA9IFwic2VxdWVuY2VPZlBhcnRzXCI7XG5leHBvcnQgY29uc3QgTm9XaGl0ZXNwYWNlUGFydFJ1bGVOYW1lID0gXCJub1doaXRlc3BhY2VQYXJ0XCI7XG5leHBvcnQgY29uc3QgTG9va0FoZWFkTW9kaWZpZXJSdWxlTmFtZSA9IFwibG9va0FoZWFkTW9kaWZpZXJcIjtcbmV4cG9ydCBjb25zdCBSZWd1bGFyRXhwcmVzc2lvblJ1bGVOYW1lID0gXCJyZWd1bGFyRXhwcmVzc2lvblwiO1xuZXhwb3J0IGNvbnN0IE9wdGlvbmFsUXVhbnRpZmllclJ1bGVOYW1lID0gXCJvcHRpb25hbFF1YW50aWZpZXJcIjtcbmV4cG9ydCBjb25zdCBPbmVPck1vcmVRdWFudGlmaWVyUnVsZU5hbWUgPSBcIm9uZU9yTW9yZVF1YW50aWZpZXJcIjtcbmV4cG9ydCBjb25zdCBaZXJvT3JNb3JlUXVhbnRpZmllclJ1bGVOYW1lID0gXCJ6ZXJvT3JNb3JlUXVhbnRpZmllclwiO1xuZXhwb3J0IGNvbnN0IFNpZ25pZmljYW50VG9rZW5UeXBlUnVsZU5hbWUgPSBcInNpZ25pZmljYW50VG9rZW5UeXBlXCI7XG5cbiJdLCJuYW1lcyI6WyJOYW1lUnVsZU5hbWUiLCJQYXJ0UnVsZU5hbWUiLCJSdWxlUnVsZU5hbWUiLCJFcnJvclJ1bGVOYW1lIiwiUnVsZU5hbWVSdWxlTmFtZSIsIkRvY3VtZW50UnVsZU5hbWUiLCJXaWxkY2FyZFJ1bGVOYW1lIiwiRW5kT2ZMaW5lUnVsZU5hbWUiLCJEZWZpbml0aW9uUnVsZU5hbWUiLCJRdWFudGlmaWVyUnVsZU5hbWUiLCJEZWZpbml0aW9uc1J1bGVOYW1lIiwiVGVybWluYWxQYXJ0UnVsZU5hbWUiLCJDaG9pY2VPZlBhcnRzUnVsZU5hbWUiLCJUZXJtaW5hbFN5bWJvbFJ1bGVOYW1lIiwiTm9uVGVybWluYWxQYXJ0UnVsZU5hbWUiLCJTZXF1ZW5jZU9mUGFydHNSdWxlTmFtZSIsIk5vV2hpdGVzcGFjZVBhcnRSdWxlTmFtZSIsIkxvb2tBaGVhZE1vZGlmaWVyUnVsZU5hbWUiLCJSZWd1bGFyRXhwcmVzc2lvblJ1bGVOYW1lIiwiT3B0aW9uYWxRdWFudGlmaWVyUnVsZU5hbWUiLCJPbmVPck1vcmVRdWFudGlmaWVyUnVsZU5hbWUiLCJaZXJvT3JNb3JlUXVhbnRpZmllclJ1bGVOYW1lIiwiU2lnbmlmaWNhbnRUb2tlblR5cGVSdWxlTmFtZSJdLCJtYXBwaW5ncyI6IkFBQUEsQ0FBWTs7Ozs7QUFFTCxHQUFLLENBQUNBLFlBQVksR0FBRyxDQUFNO1FBQXJCQSxZQUFZLEdBQVpBLFlBQVk7QUFDbEIsR0FBSyxDQUFDQyxZQUFZLEdBQUcsQ0FBTTtRQUFyQkEsWUFBWSxHQUFaQSxZQUFZO0FBQ2xCLEdBQUssQ0FBQ0MsWUFBWSxHQUFHLENBQU07UUFBckJBLFlBQVksR0FBWkEsWUFBWTtBQUNsQixHQUFLLENBQUNDLGFBQWEsR0FBRyxDQUFPO1FBQXZCQSxhQUFhLEdBQWJBLGFBQWE7QUFDbkIsR0FBSyxDQUFDQyxnQkFBZ0IsR0FBRyxDQUFVO1FBQTdCQSxnQkFBZ0IsR0FBaEJBLGdCQUFnQjtBQUN0QixHQUFLLENBQUNDLGdCQUFnQixHQUFHLENBQVU7UUFBN0JBLGdCQUFnQixHQUFoQkEsZ0JBQWdCO0FBQ3RCLEdBQUssQ0FBQ0MsZ0JBQWdCLEdBQUcsQ0FBVTtRQUE3QkEsZ0JBQWdCLEdBQWhCQSxnQkFBZ0I7QUFDdEIsR0FBSyxDQUFDQyxpQkFBaUIsR0FBRyxDQUFXO1FBQS9CQSxpQkFBaUIsR0FBakJBLGlCQUFpQjtBQUN2QixHQUFLLENBQUNDLGtCQUFrQixHQUFHLENBQVk7UUFBakNBLGtCQUFrQixHQUFsQkEsa0JBQWtCO0FBQ3hCLEdBQUssQ0FBQ0Msa0JBQWtCLEdBQUcsQ0FBWTtRQUFqQ0Esa0JBQWtCLEdBQWxCQSxrQkFBa0I7QUFDeEIsR0FBSyxDQUFDQyxtQkFBbUIsR0FBRyxDQUFhO1FBQW5DQSxtQkFBbUIsR0FBbkJBLG1CQUFtQjtBQUN6QixHQUFLLENBQUNDLG9CQUFvQixHQUFHLENBQWM7UUFBckNBLG9CQUFvQixHQUFwQkEsb0JBQW9CO0FBQzFCLEdBQUssQ0FBQ0MscUJBQXFCLEdBQUcsQ0FBZTtRQUF2Q0EscUJBQXFCLEdBQXJCQSxxQkFBcUI7QUFDM0IsR0FBSyxDQUFDQyxzQkFBc0IsR0FBRyxDQUFnQjtRQUF6Q0Esc0JBQXNCLEdBQXRCQSxzQkFBc0I7QUFDNUIsR0FBSyxDQUFDQyx1QkFBdUIsR0FBRyxDQUFpQjtRQUEzQ0EsdUJBQXVCLEdBQXZCQSx1QkFBdUI7QUFDN0IsR0FBSyxDQUFDQyx1QkFBdUIsR0FBRyxDQUFpQjtRQUEzQ0EsdUJBQXVCLEdBQXZCQSx1QkFBdUI7QUFDN0IsR0FBSyxDQUFDQyx3QkFBd0IsR0FBRyxDQUFrQjtRQUE3Q0Esd0JBQXdCLEdBQXhCQSx3QkFBd0I7QUFDOUIsR0FBSyxDQUFDQyx5QkFBeUIsR0FBRyxDQUFtQjtRQUEvQ0EseUJBQXlCLEdBQXpCQSx5QkFBeUI7QUFDL0IsR0FBSyxDQUFDQyx5QkFBeUIsR0FBRyxDQUFtQjtRQUEvQ0EseUJBQXlCLEdBQXpCQSx5QkFBeUI7QUFDL0IsR0FBSyxDQUFDQywwQkFBMEIsR0FBRyxDQUFvQjtRQUFqREEsMEJBQTBCLEdBQTFCQSwwQkFBMEI7QUFDaEMsR0FBSyxDQUFDQywyQkFBMkIsR0FBRyxDQUFxQjtRQUFuREEsMkJBQTJCLEdBQTNCQSwyQkFBMkI7QUFDakMsR0FBSyxDQUFDQyw0QkFBNEIsR0FBRyxDQUFzQjtRQUFyREEsNEJBQTRCLEdBQTVCQSw0QkFBNEI7QUFDbEMsR0FBSyxDQUFDQyw0QkFBNEIsR0FBRyxDQUFzQjtRQUFyREEsNEJBQTRCLEdBQTVCQSw0QkFBNEIifQ==