'use strict';

var necessary = require('necessary');

var arrayUtilities = necessary.arrayUtilities;


function allButFirst(array) {
  return array.slice(1);
}

function keepFirst(array) {
  return keepNth(array, 0);
}

function keepSecond(array) {
  return keepNth(array, 1);
}

function keepLast(array) {
  return keepNth(array, -1);
}

function discardFirst(array) {
  return discardNth(array, 0);
}

function discardSecond(array) {
  return discardNth(array, 1);
}

function discardLast(array) {
  return discardNth(array, -1);
}

function discardLastThenFirst(array) {
  return discardNth(discardNth(array, -1), 0);
}

function discardFourthThenSecond(array) {
  return discardNth(discardNth(array, 3), 1);
}

function discardFifthThenSecond(array) {
  return discardNth(discardNth(array, 4), 1);
}

function discardOdd(array) {
  return array.filter(function (entry, index) {
    return isEven(index);
  });
}

module.exports = Object.assign(arrayUtilities, {
  allButFirst: allButFirst,
  keepFirst: keepFirst,
  keepSecond: keepSecond,
  keepLast: keepLast,
  discardFirst: discardFirst,
  discardSecond: discardSecond,
  discardLast: discardLast,
  discardLastThenFirst: discardLastThenFirst,
  discardFourthThenSecond: discardFourthThenSecond,
  discardFifthThenSecond: discardFifthThenSecond,
  discardOdd: discardOdd
});

function keepNth(array, n) {
  array = array.slice();

  return array.splice(n, 1);
}

function discardNth(array, n) {
  array = array.slice();

  array.splice(n, 1);

  return array;
}

function isEven(index) {
  var even = Math.floor(index / 2) === index / 2;

  return even;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi91dGlsaXRpZXMvYXJyYXkuanMiXSwibmFtZXMiOlsibmVjZXNzYXJ5IiwicmVxdWlyZSIsImFycmF5VXRpbGl0aWVzIiwiYWxsQnV0Rmlyc3QiLCJhcnJheSIsInNsaWNlIiwia2VlcEZpcnN0Iiwia2VlcE50aCIsImtlZXBTZWNvbmQiLCJrZWVwTGFzdCIsImRpc2NhcmRGaXJzdCIsImRpc2NhcmROdGgiLCJkaXNjYXJkU2Vjb25kIiwiZGlzY2FyZExhc3QiLCJkaXNjYXJkTGFzdFRoZW5GaXJzdCIsImRpc2NhcmRGb3VydGhUaGVuU2Vjb25kIiwiZGlzY2FyZEZpZnRoVGhlblNlY29uZCIsImRpc2NhcmRPZGQiLCJmaWx0ZXIiLCJlbnRyeSIsImluZGV4IiwiaXNFdmVuIiwibW9kdWxlIiwiZXhwb3J0cyIsIk9iamVjdCIsImFzc2lnbiIsIm4iLCJzcGxpY2UiLCJldmVuIiwiTWF0aCIsImZsb29yIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxZQUFZQyxRQUFRLFdBQVIsQ0FBbEI7O0lBRVFDLGMsR0FBbUJGLFMsQ0FBbkJFLGM7OztBQUVSLFNBQVNDLFdBQVQsQ0FBcUJDLEtBQXJCLEVBQTRCO0FBQUUsU0FBT0EsTUFBTUMsS0FBTixDQUFZLENBQVosQ0FBUDtBQUF3Qjs7QUFFdEQsU0FBU0MsU0FBVCxDQUFtQkYsS0FBbkIsRUFBMEI7QUFBRSxTQUFPRyxRQUFRSCxLQUFSLEVBQWUsQ0FBZixDQUFQO0FBQTJCOztBQUV2RCxTQUFTSSxVQUFULENBQW9CSixLQUFwQixFQUEyQjtBQUFFLFNBQU9HLFFBQVFILEtBQVIsRUFBZSxDQUFmLENBQVA7QUFBMkI7O0FBRXhELFNBQVNLLFFBQVQsQ0FBa0JMLEtBQWxCLEVBQXlCO0FBQUUsU0FBT0csUUFBUUgsS0FBUixFQUFlLENBQUMsQ0FBaEIsQ0FBUDtBQUE0Qjs7QUFFdkQsU0FBU00sWUFBVCxDQUFzQk4sS0FBdEIsRUFBNkI7QUFBRSxTQUFPTyxXQUFXUCxLQUFYLEVBQWtCLENBQWxCLENBQVA7QUFBOEI7O0FBRTdELFNBQVNRLGFBQVQsQ0FBdUJSLEtBQXZCLEVBQThCO0FBQUUsU0FBT08sV0FBV1AsS0FBWCxFQUFrQixDQUFsQixDQUFQO0FBQThCOztBQUU5RCxTQUFTUyxXQUFULENBQXFCVCxLQUFyQixFQUE0QjtBQUFFLFNBQU9PLFdBQVdQLEtBQVgsRUFBa0IsQ0FBQyxDQUFuQixDQUFQO0FBQStCOztBQUU3RCxTQUFTVSxvQkFBVCxDQUE4QlYsS0FBOUIsRUFBcUM7QUFBRSxTQUFPTyxXQUFXQSxXQUFXUCxLQUFYLEVBQWtCLENBQUMsQ0FBbkIsQ0FBWCxFQUFrQyxDQUFsQyxDQUFQO0FBQThDOztBQUVyRixTQUFTVyx1QkFBVCxDQUFpQ1gsS0FBakMsRUFBd0M7QUFBRSxTQUFPTyxXQUFXQSxXQUFXUCxLQUFYLEVBQWtCLENBQWxCLENBQVgsRUFBaUMsQ0FBakMsQ0FBUDtBQUE2Qzs7QUFFdkYsU0FBU1ksc0JBQVQsQ0FBZ0NaLEtBQWhDLEVBQXVDO0FBQUUsU0FBT08sV0FBV0EsV0FBV1AsS0FBWCxFQUFrQixDQUFsQixDQUFYLEVBQWlDLENBQWpDLENBQVA7QUFBNkM7O0FBRXRGLFNBQVNhLFVBQVQsQ0FBb0JiLEtBQXBCLEVBQTJCO0FBQUUsU0FBT0EsTUFBTWMsTUFBTixDQUFhLFVBQVNDLEtBQVQsRUFBZ0JDLEtBQWhCLEVBQXVCO0FBQUUsV0FBT0MsT0FBT0QsS0FBUCxDQUFQO0FBQXVCLEdBQTdELENBQVA7QUFBd0U7O0FBRXJHRSxPQUFPQyxPQUFQLEdBQWlCQyxPQUFPQyxNQUFQLENBQWN2QixjQUFkLEVBQThCO0FBQzdDQywwQkFENkM7QUFFN0NHLHNCQUY2QztBQUc3Q0Usd0JBSDZDO0FBSTdDQyxvQkFKNkM7QUFLN0NDLDRCQUw2QztBQU03Q0UsOEJBTjZDO0FBTzdDQywwQkFQNkM7QUFRN0NDLDRDQVI2QztBQVM3Q0Msa0RBVDZDO0FBVTdDQyxnREFWNkM7QUFXN0NDO0FBWDZDLENBQTlCLENBQWpCOztBQWNBLFNBQVNWLE9BQVQsQ0FBaUJILEtBQWpCLEVBQXdCc0IsQ0FBeEIsRUFBMkI7QUFDekJ0QixVQUFRQSxNQUFNQyxLQUFOLEVBQVI7O0FBRUEsU0FBT0QsTUFBTXVCLE1BQU4sQ0FBYUQsQ0FBYixFQUFnQixDQUFoQixDQUFQO0FBQ0Q7O0FBRUQsU0FBU2YsVUFBVCxDQUFvQlAsS0FBcEIsRUFBMkJzQixDQUEzQixFQUE4QjtBQUM1QnRCLFVBQVFBLE1BQU1DLEtBQU4sRUFBUjs7QUFFQUQsUUFBTXVCLE1BQU4sQ0FBYUQsQ0FBYixFQUFnQixDQUFoQjs7QUFFQSxTQUFPdEIsS0FBUDtBQUNEOztBQUVELFNBQVNpQixNQUFULENBQWdCRCxLQUFoQixFQUF1QjtBQUNyQixNQUFNUSxPQUFRQyxLQUFLQyxLQUFMLENBQVdWLFFBQU0sQ0FBakIsTUFBd0JBLFFBQU0sQ0FBNUM7O0FBRUEsU0FBT1EsSUFBUDtBQUNEIiwiZmlsZSI6ImFycmF5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBuZWNlc3NhcnkgPSByZXF1aXJlKCduZWNlc3NhcnknKTtcblxuY29uc3QgeyBhcnJheVV0aWxpdGllcyB9ID0gbmVjZXNzYXJ5O1xuXG5mdW5jdGlvbiBhbGxCdXRGaXJzdChhcnJheSkgeyByZXR1cm4gYXJyYXkuc2xpY2UoMSk7IH1cblxuZnVuY3Rpb24ga2VlcEZpcnN0KGFycmF5KSB7IHJldHVybiBrZWVwTnRoKGFycmF5LCAwKTsgfVxuXG5mdW5jdGlvbiBrZWVwU2Vjb25kKGFycmF5KSB7IHJldHVybiBrZWVwTnRoKGFycmF5LCAxKTsgfVxuXG5mdW5jdGlvbiBrZWVwTGFzdChhcnJheSkgeyByZXR1cm4ga2VlcE50aChhcnJheSwgLTEpOyB9XG5cbmZ1bmN0aW9uIGRpc2NhcmRGaXJzdChhcnJheSkgeyByZXR1cm4gZGlzY2FyZE50aChhcnJheSwgMCk7IH1cblxuZnVuY3Rpb24gZGlzY2FyZFNlY29uZChhcnJheSkgeyByZXR1cm4gZGlzY2FyZE50aChhcnJheSwgMSk7IH1cblxuZnVuY3Rpb24gZGlzY2FyZExhc3QoYXJyYXkpIHsgcmV0dXJuIGRpc2NhcmROdGgoYXJyYXksIC0xKTsgfVxuXG5mdW5jdGlvbiBkaXNjYXJkTGFzdFRoZW5GaXJzdChhcnJheSkgeyByZXR1cm4gZGlzY2FyZE50aChkaXNjYXJkTnRoKGFycmF5LCAtMSksIDApOyB9XG5cbmZ1bmN0aW9uIGRpc2NhcmRGb3VydGhUaGVuU2Vjb25kKGFycmF5KSB7IHJldHVybiBkaXNjYXJkTnRoKGRpc2NhcmROdGgoYXJyYXksIDMpLCAxKTsgfVxuXG5mdW5jdGlvbiBkaXNjYXJkRmlmdGhUaGVuU2Vjb25kKGFycmF5KSB7IHJldHVybiBkaXNjYXJkTnRoKGRpc2NhcmROdGgoYXJyYXksIDQpLCAxKTsgfVxuXG5mdW5jdGlvbiBkaXNjYXJkT2RkKGFycmF5KSB7IHJldHVybiBhcnJheS5maWx0ZXIoZnVuY3Rpb24oZW50cnksIGluZGV4KSB7IHJldHVybiBpc0V2ZW4oaW5kZXgpOyB9KTsgfVxuXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5hc3NpZ24oYXJyYXlVdGlsaXRpZXMsIHtcbiAgYWxsQnV0Rmlyc3QsXG4gIGtlZXBGaXJzdCxcbiAga2VlcFNlY29uZCxcbiAga2VlcExhc3QsXG4gIGRpc2NhcmRGaXJzdCxcbiAgZGlzY2FyZFNlY29uZCxcbiAgZGlzY2FyZExhc3QsXG4gIGRpc2NhcmRMYXN0VGhlbkZpcnN0LFxuICBkaXNjYXJkRm91cnRoVGhlblNlY29uZCxcbiAgZGlzY2FyZEZpZnRoVGhlblNlY29uZCxcbiAgZGlzY2FyZE9kZFxufSk7XG5cbmZ1bmN0aW9uIGtlZXBOdGgoYXJyYXksIG4pIHtcbiAgYXJyYXkgPSBhcnJheS5zbGljZSgpO1xuXG4gIHJldHVybiBhcnJheS5zcGxpY2UobiwgMSk7XG59XG5cbmZ1bmN0aW9uIGRpc2NhcmROdGgoYXJyYXksIG4pIHtcbiAgYXJyYXkgPSBhcnJheS5zbGljZSgpO1xuXG4gIGFycmF5LnNwbGljZShuLCAxKTtcblxuICByZXR1cm4gYXJyYXk7XG59XG5cbmZ1bmN0aW9uIGlzRXZlbihpbmRleCkge1xuICBjb25zdCBldmVuID0gKE1hdGguZmxvb3IoaW5kZXgvMikgPT09IGluZGV4LzIpO1xuXG4gIHJldHVybiBldmVuO1xufVxuIl19