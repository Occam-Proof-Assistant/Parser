'use strict';

var necessary = require('necessary');

var arrayUtilities = necessary.arrayUtilities;

function even(array) {
  return array.filter(function (entry, index) {
    return isEven(index);
  });
}

function allButFirst(array) {
  return discardNth(array, 0);
}

function allButFirstAndLast(array) {
  return discardNth(discardNth(array, -1), 0);
}

module.exports = Object.assign(arrayUtilities, {
  even: even,
  allButFirst: allButFirst,
  allButFirstAndLast: allButFirstAndLast
});

function discardNth(array, n) {
  array = array.slice(); ///

  array.splice(n, 1);
  return array;
}

function isEven(index) {
  var even = Math.floor(index / 2) === index / 2;
  return even;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFycmF5LmpzIl0sIm5hbWVzIjpbIm5lY2Vzc2FyeSIsInJlcXVpcmUiLCJhcnJheVV0aWxpdGllcyIsImV2ZW4iLCJhcnJheSIsImZpbHRlciIsImVudHJ5IiwiaW5kZXgiLCJpc0V2ZW4iLCJhbGxCdXRGaXJzdCIsImRpc2NhcmROdGgiLCJhbGxCdXRGaXJzdEFuZExhc3QiLCJtb2R1bGUiLCJleHBvcnRzIiwiT2JqZWN0IiwiYXNzaWduIiwibiIsInNsaWNlIiwic3BsaWNlIiwiTWF0aCIsImZsb29yIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztJQUVRQyxjLEdBQW1CRixTLENBQW5CRSxjOztBQUVSLFNBQVNDLElBQVQsQ0FBY0MsS0FBZCxFQUFxQjtBQUFFLFNBQU9BLEtBQUssQ0FBQ0MsTUFBTixDQUFhLFVBQVNDLEtBQVQsRUFBZ0JDLEtBQWhCLEVBQXVCO0FBQUUsV0FBT0MsTUFBTSxDQUFDRCxLQUFELENBQWI7QUFBdUIsR0FBN0QsQ0FBUDtBQUF3RTs7QUFFL0YsU0FBU0UsV0FBVCxDQUFxQkwsS0FBckIsRUFBNEI7QUFBRSxTQUFPTSxVQUFVLENBQUNOLEtBQUQsRUFBUSxDQUFSLENBQWpCO0FBQThCOztBQUU1RCxTQUFTTyxrQkFBVCxDQUE0QlAsS0FBNUIsRUFBbUM7QUFBRSxTQUFPTSxVQUFVLENBQUNBLFVBQVUsQ0FBQ04sS0FBRCxFQUFRLENBQUMsQ0FBVCxDQUFYLEVBQXdCLENBQXhCLENBQWpCO0FBQThDOztBQUVuRlEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCQyxNQUFNLENBQUNDLE1BQVAsQ0FBY2IsY0FBZCxFQUE4QjtBQUM3Q0MsRUFBQUEsSUFBSSxFQUFKQSxJQUQ2QztBQUU3Q00sRUFBQUEsV0FBVyxFQUFYQSxXQUY2QztBQUc3Q0UsRUFBQUEsa0JBQWtCLEVBQWxCQTtBQUg2QyxDQUE5QixDQUFqQjs7QUFNQSxTQUFTRCxVQUFULENBQW9CTixLQUFwQixFQUEyQlksQ0FBM0IsRUFBOEI7QUFDNUJaLEVBQUFBLEtBQUssR0FBR0EsS0FBSyxDQUFDYSxLQUFOLEVBQVIsQ0FENEIsQ0FDSjs7QUFFeEJiLEVBQUFBLEtBQUssQ0FBQ2MsTUFBTixDQUFhRixDQUFiLEVBQWdCLENBQWhCO0FBRUEsU0FBT1osS0FBUDtBQUNEOztBQUVELFNBQVNJLE1BQVQsQ0FBZ0JELEtBQWhCLEVBQXVCO0FBQ3JCLE1BQU1KLElBQUksR0FBSWdCLElBQUksQ0FBQ0MsS0FBTCxDQUFXYixLQUFLLEdBQUMsQ0FBakIsTUFBd0JBLEtBQUssR0FBQyxDQUE1QztBQUVBLFNBQU9KLElBQVA7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgbmVjZXNzYXJ5ID0gcmVxdWlyZSgnbmVjZXNzYXJ5Jyk7XG5cbmNvbnN0IHsgYXJyYXlVdGlsaXRpZXMgfSA9IG5lY2Vzc2FyeTtcblxuZnVuY3Rpb24gZXZlbihhcnJheSkgeyByZXR1cm4gYXJyYXkuZmlsdGVyKGZ1bmN0aW9uKGVudHJ5LCBpbmRleCkgeyByZXR1cm4gaXNFdmVuKGluZGV4KTsgfSk7IH1cblxuZnVuY3Rpb24gYWxsQnV0Rmlyc3QoYXJyYXkpIHsgcmV0dXJuIGRpc2NhcmROdGgoYXJyYXksIDApOyB9XG5cbmZ1bmN0aW9uIGFsbEJ1dEZpcnN0QW5kTGFzdChhcnJheSkgeyByZXR1cm4gZGlzY2FyZE50aChkaXNjYXJkTnRoKGFycmF5LCAtMSksIDApOyB9XG5cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmFzc2lnbihhcnJheVV0aWxpdGllcywge1xuICBldmVuLFxuICBhbGxCdXRGaXJzdCxcbiAgYWxsQnV0Rmlyc3RBbmRMYXN0XG59KTtcblxuZnVuY3Rpb24gZGlzY2FyZE50aChhcnJheSwgbikge1xuICBhcnJheSA9IGFycmF5LnNsaWNlKCk7ICAvLy9cblxuICBhcnJheS5zcGxpY2UobiwgMSk7XG5cbiAgcmV0dXJuIGFycmF5O1xufVxuXG5mdW5jdGlvbiBpc0V2ZW4oaW5kZXgpIHtcbiAgY29uc3QgZXZlbiA9IChNYXRoLmZsb29yKGluZGV4LzIpID09PSBpbmRleC8yKTtcblxuICByZXR1cm4gZXZlbjtcbn1cbiJdfQ==