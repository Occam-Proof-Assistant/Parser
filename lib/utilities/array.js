"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.even = even;
exports.allButFirst = allButFirst;
exports.allButFirstAndLast = allButFirstAndLast;
exports.backwardsSome = exports.forwardsSome = exports.concat = exports.last = exports.third = exports.second = exports.first = void 0;

var _necessary = require("necessary");

var first = _necessary.arrayUtilities.first,
    second = _necessary.arrayUtilities.second,
    third = _necessary.arrayUtilities.third,
    last = _necessary.arrayUtilities.last,
    concat = _necessary.arrayUtilities.concat,
    forwardsSome = _necessary.arrayUtilities.forwardsSome,
    backwardsSome = _necessary.arrayUtilities.backwardsSome;
exports.backwardsSome = backwardsSome;
exports.forwardsSome = forwardsSome;
exports.concat = concat;
exports.last = last;
exports.third = third;
exports.second = second;
exports.first = first;

function even(array) {
  return array.filter(function (entry, index) {
    return isEven(index);
  });
}

function allButFirst(array) {
  return discardNth(array, 0);
}

function allButFirstAndLast(array) {
  return discardNth(discardNth(array, -1), 0);
}

function discardNth(array, n) {
  array = array.slice(); ///

  array.splice(n, 1);
  return array;
}

function isEven(index) {
  var even = Math.floor(index / 2) === index / 2;
  return even;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFycmF5LmpzIl0sIm5hbWVzIjpbImZpcnN0IiwiYXJyYXlVdGlsaXRpZXMiLCJzZWNvbmQiLCJ0aGlyZCIsImxhc3QiLCJjb25jYXQiLCJmb3J3YXJkc1NvbWUiLCJiYWNrd2FyZHNTb21lIiwiZXZlbiIsImFycmF5IiwiZmlsdGVyIiwiZW50cnkiLCJpbmRleCIsImlzRXZlbiIsImFsbEJ1dEZpcnN0IiwiZGlzY2FyZE50aCIsImFsbEJ1dEZpcnN0QW5kTGFzdCIsIm4iLCJzbGljZSIsInNwbGljZSIsIk1hdGgiLCJmbG9vciJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7QUFFQTs7SUFFZUEsSyxHQUFvRUMseUIsQ0FBcEVELEs7SUFBT0UsTSxHQUE2REQseUIsQ0FBN0RDLE07SUFBUUMsSyxHQUFxREYseUIsQ0FBckRFLEs7SUFBT0MsSSxHQUE4Q0gseUIsQ0FBOUNHLEk7SUFBTUMsTSxHQUF3Q0oseUIsQ0FBeENJLE07SUFBUUMsWSxHQUFnQ0wseUIsQ0FBaENLLFk7SUFBY0MsYSxHQUFrQk4seUIsQ0FBbEJNLGE7Ozs7Ozs7OztBQUUxRCxTQUFTQyxJQUFULENBQWNDLEtBQWQsRUFBcUI7QUFBRSxTQUFPQSxLQUFLLENBQUNDLE1BQU4sQ0FBYSxVQUFTQyxLQUFULEVBQWdCQyxLQUFoQixFQUF1QjtBQUFFLFdBQU9DLE1BQU0sQ0FBQ0QsS0FBRCxDQUFiO0FBQXVCLEdBQTdELENBQVA7QUFBd0U7O0FBRS9GLFNBQVNFLFdBQVQsQ0FBcUJMLEtBQXJCLEVBQTRCO0FBQUUsU0FBT00sVUFBVSxDQUFDTixLQUFELEVBQVEsQ0FBUixDQUFqQjtBQUE4Qjs7QUFFNUQsU0FBU08sa0JBQVQsQ0FBNEJQLEtBQTVCLEVBQW1DO0FBQUUsU0FBT00sVUFBVSxDQUFDQSxVQUFVLENBQUNOLEtBQUQsRUFBUSxDQUFDLENBQVQsQ0FBWCxFQUF3QixDQUF4QixDQUFqQjtBQUE4Qzs7QUFFMUYsU0FBU00sVUFBVCxDQUFvQk4sS0FBcEIsRUFBMkJRLENBQTNCLEVBQThCO0FBQzVCUixFQUFBQSxLQUFLLEdBQUdBLEtBQUssQ0FBQ1MsS0FBTixFQUFSLENBRDRCLENBQ0o7O0FBRXhCVCxFQUFBQSxLQUFLLENBQUNVLE1BQU4sQ0FBYUYsQ0FBYixFQUFnQixDQUFoQjtBQUVBLFNBQU9SLEtBQVA7QUFDRDs7QUFFRCxTQUFTSSxNQUFULENBQWdCRCxLQUFoQixFQUF1QjtBQUNyQixNQUFNSixJQUFJLEdBQUlZLElBQUksQ0FBQ0MsS0FBTCxDQUFXVCxLQUFLLEdBQUMsQ0FBakIsTUFBd0JBLEtBQUssR0FBQyxDQUE1QztBQUVBLFNBQU9KLElBQVA7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBhcnJheVV0aWxpdGllcyB9IGZyb20gXCJuZWNlc3NhcnlcIjtcblxuZXhwb3J0IGNvbnN0IHsgZmlyc3QsIHNlY29uZCwgdGhpcmQsIGxhc3QsIGNvbmNhdCwgZm9yd2FyZHNTb21lLCBiYWNrd2FyZHNTb21lIH0gPSBhcnJheVV0aWxpdGllcztcblxuZXhwb3J0IGZ1bmN0aW9uIGV2ZW4oYXJyYXkpIHsgcmV0dXJuIGFycmF5LmZpbHRlcihmdW5jdGlvbihlbnRyeSwgaW5kZXgpIHsgcmV0dXJuIGlzRXZlbihpbmRleCk7IH0pOyB9XG5cbmV4cG9ydCBmdW5jdGlvbiBhbGxCdXRGaXJzdChhcnJheSkgeyByZXR1cm4gZGlzY2FyZE50aChhcnJheSwgMCk7IH1cblxuZXhwb3J0IGZ1bmN0aW9uIGFsbEJ1dEZpcnN0QW5kTGFzdChhcnJheSkgeyByZXR1cm4gZGlzY2FyZE50aChkaXNjYXJkTnRoKGFycmF5LCAtMSksIDApOyB9XG5cbmZ1bmN0aW9uIGRpc2NhcmROdGgoYXJyYXksIG4pIHtcbiAgYXJyYXkgPSBhcnJheS5zbGljZSgpOyAgLy8vXG5cbiAgYXJyYXkuc3BsaWNlKG4sIDEpO1xuXG4gIHJldHVybiBhcnJheTtcbn1cblxuZnVuY3Rpb24gaXNFdmVuKGluZGV4KSB7XG4gIGNvbnN0IGV2ZW4gPSAoTWF0aC5mbG9vcihpbmRleC8yKSA9PT0gaW5kZXgvMik7XG5cbiAgcmV0dXJuIGV2ZW47XG59XG4iXX0=