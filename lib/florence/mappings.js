'use strict';

var TransparentNode = require('../common/node/nonTerminal/transparentNode'),
    DiscardOddChildNodes = require('../common/node/nonTerminal/discardOddChildNodes'),
    DiscardSecondChildNode = require('../common/node/nonTerminal/discardSecondChildNode'),
    TransparentThenKeepSecondNode = require('../common/node/nonTerminal/transparentThenKeepSecondNode');

var mappings = {

  'unjustifiedStatementOrJustifiedStatement': TransparentNode,

  'part': TransparentNode,
  'name': TransparentNode,

  'then': DiscardSecondChildNode,
  'hence': DiscardSecondChildNode,
  'proof': DiscardSecondChildNode,
  'suppose': DiscardSecondChildNode,
  'premise': DiscardSecondChildNode,
  'premises': DiscardSecondChildNode,
  'therefore': DiscardSecondChildNode,
  'conclusion': DiscardSecondChildNode,

  'includeDirective': DiscardOddChildNodes,

  'types': DiscardOddChildNodes,
  'variables': DiscardOddChildNodes,
  'constructors': DiscardOddChildNodes,
  'dependentTypes': DiscardOddChildNodes,
  'metaVariables': DiscardOddChildNodes,
  'qualifiedMetaVariables': DiscardOddChildNodes,

  'labels': DiscardOddChildNodes,
  'terms': DiscardOddChildNodes,

  'parenthesisedTypeNames': TransparentThenKeepSecondNode,
  'parenthesisedLabels': TransparentThenKeepSecondNode,
  'parenthesisedTerms': TransparentThenKeepSecondNode

};

module.exports = mappings;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9mbG9yZW5jZS9tYXBwaW5ncy5qcyJdLCJuYW1lcyI6WyJUcmFuc3BhcmVudE5vZGUiLCJyZXF1aXJlIiwiRGlzY2FyZE9kZENoaWxkTm9kZXMiLCJEaXNjYXJkU2Vjb25kQ2hpbGROb2RlIiwiVHJhbnNwYXJlbnRUaGVuS2VlcFNlY29uZE5vZGUiLCJtYXBwaW5ncyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLGtCQUFrQkMsUUFBUSw0Q0FBUixDQUF4QjtBQUFBLElBQ01DLHVCQUF1QkQsUUFBUSxpREFBUixDQUQ3QjtBQUFBLElBRU1FLHlCQUF5QkYsUUFBUSxtREFBUixDQUYvQjtBQUFBLElBR01HLGdDQUFnQ0gsUUFBUSwwREFBUixDQUh0Qzs7QUFLQSxJQUFNSSxXQUFXOztBQUVmLDhDQUE2Q0wsZUFGOUI7O0FBSWYsVUFBUUEsZUFKTztBQUtmLFVBQVFBLGVBTE87O0FBT2YsVUFBUUcsc0JBUE87QUFRZixXQUFTQSxzQkFSTTtBQVNmLFdBQVNBLHNCQVRNO0FBVWYsYUFBV0Esc0JBVkk7QUFXZixhQUFXQSxzQkFYSTtBQVlmLGNBQVlBLHNCQVpHO0FBYWYsZUFBYUEsc0JBYkU7QUFjZixnQkFBY0Esc0JBZEM7O0FBZ0JmLHNCQUFvQkQsb0JBaEJMOztBQWtCZixXQUFTQSxvQkFsQk07QUFtQmYsZUFBYUEsb0JBbkJFO0FBb0JmLGtCQUFnQkEsb0JBcEJEO0FBcUJmLG9CQUFrQkEsb0JBckJIO0FBc0JmLG1CQUFpQkEsb0JBdEJGO0FBdUJmLDRCQUEwQkEsb0JBdkJYOztBQXlCZixZQUFVQSxvQkF6Qks7QUEwQmYsV0FBU0Esb0JBMUJNOztBQTRCZiw0QkFBMkJFLDZCQTVCWjtBQTZCZix5QkFBd0JBLDZCQTdCVDtBQThCZix3QkFBdUJBOztBQTlCUixDQUFqQjs7QUFrQ0FFLE9BQU9DLE9BQVAsR0FBaUJGLFFBQWpCIiwiZmlsZSI6Im1hcHBpbmdzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBUcmFuc3BhcmVudE5vZGUgPSByZXF1aXJlKCcuLi9jb21tb24vbm9kZS9ub25UZXJtaW5hbC90cmFuc3BhcmVudE5vZGUnKSxcbiAgICAgIERpc2NhcmRPZGRDaGlsZE5vZGVzID0gcmVxdWlyZSgnLi4vY29tbW9uL25vZGUvbm9uVGVybWluYWwvZGlzY2FyZE9kZENoaWxkTm9kZXMnKSxcbiAgICAgIERpc2NhcmRTZWNvbmRDaGlsZE5vZGUgPSByZXF1aXJlKCcuLi9jb21tb24vbm9kZS9ub25UZXJtaW5hbC9kaXNjYXJkU2Vjb25kQ2hpbGROb2RlJyksXG4gICAgICBUcmFuc3BhcmVudFRoZW5LZWVwU2Vjb25kTm9kZSA9IHJlcXVpcmUoJy4uL2NvbW1vbi9ub2RlL25vblRlcm1pbmFsL3RyYW5zcGFyZW50VGhlbktlZXBTZWNvbmROb2RlJyk7XG5cbmNvbnN0IG1hcHBpbmdzID0ge1xuXG4gICd1bmp1c3RpZmllZFN0YXRlbWVudE9ySnVzdGlmaWVkU3RhdGVtZW50JyA6IFRyYW5zcGFyZW50Tm9kZSxcblxuICAncGFydCc6IFRyYW5zcGFyZW50Tm9kZSxcbiAgJ25hbWUnOiBUcmFuc3BhcmVudE5vZGUsXG5cbiAgJ3RoZW4nOiBEaXNjYXJkU2Vjb25kQ2hpbGROb2RlLFxuICAnaGVuY2UnOiBEaXNjYXJkU2Vjb25kQ2hpbGROb2RlLFxuICAncHJvb2YnOiBEaXNjYXJkU2Vjb25kQ2hpbGROb2RlLFxuICAnc3VwcG9zZSc6IERpc2NhcmRTZWNvbmRDaGlsZE5vZGUsXG4gICdwcmVtaXNlJzogRGlzY2FyZFNlY29uZENoaWxkTm9kZSxcbiAgJ3ByZW1pc2VzJzogRGlzY2FyZFNlY29uZENoaWxkTm9kZSxcbiAgJ3RoZXJlZm9yZSc6IERpc2NhcmRTZWNvbmRDaGlsZE5vZGUsXG4gICdjb25jbHVzaW9uJzogRGlzY2FyZFNlY29uZENoaWxkTm9kZSxcblxuICAnaW5jbHVkZURpcmVjdGl2ZSc6IERpc2NhcmRPZGRDaGlsZE5vZGVzLFxuXG4gICd0eXBlcyc6IERpc2NhcmRPZGRDaGlsZE5vZGVzLFxuICAndmFyaWFibGVzJzogRGlzY2FyZE9kZENoaWxkTm9kZXMsXG4gICdjb25zdHJ1Y3RvcnMnOiBEaXNjYXJkT2RkQ2hpbGROb2RlcyxcbiAgJ2RlcGVuZGVudFR5cGVzJzogRGlzY2FyZE9kZENoaWxkTm9kZXMsXG4gICdtZXRhVmFyaWFibGVzJzogRGlzY2FyZE9kZENoaWxkTm9kZXMsXG4gICdxdWFsaWZpZWRNZXRhVmFyaWFibGVzJzogRGlzY2FyZE9kZENoaWxkTm9kZXMsXG5cbiAgJ2xhYmVscyc6IERpc2NhcmRPZGRDaGlsZE5vZGVzLFxuICAndGVybXMnOiBEaXNjYXJkT2RkQ2hpbGROb2RlcyxcbiAgXG4gICdwYXJlbnRoZXNpc2VkVHlwZU5hbWVzJyA6IFRyYW5zcGFyZW50VGhlbktlZXBTZWNvbmROb2RlLFxuICAncGFyZW50aGVzaXNlZExhYmVscycgOiBUcmFuc3BhcmVudFRoZW5LZWVwU2Vjb25kTm9kZSxcbiAgJ3BhcmVudGhlc2lzZWRUZXJtcycgOiBUcmFuc3BhcmVudFRoZW5LZWVwU2Vjb25kTm9kZVxuICBcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gbWFwcGluZ3M7XG4iXX0=