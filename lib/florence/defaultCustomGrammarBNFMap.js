'use strict';

var metastatement = '\n\n\n     proofAssertion                       ::=   context "\u22A2" judgement ;\n     \n     contextDefinition                    ::=   context "=" ( judgement | context ) ( "," ( judgement | context ) )* ;\n\n     judgement                            ::=   reference "::" metastatementBody ;\n\n     subproof                             ::=   supposition "..." metastatementBody ;\n\n     supposition                          ::=   "[" metastatementBody "]" ;\n\n\n\n     metastatementBody                    ::=   ( proofAssertion | contextDefinition | subproof | metavariable ) ; \n\n\n\n     metastatement                        ::=   proofAssertion qualification? <END_OF_LINE> \n           \n                                            |   contextDefinition qualification? <END_OF_LINE> \n           \n                                            |   subproof qualification? <END_OF_LINE> \n                                            \n                                            |   metavariable qualification? <END_OF_LINE> \n\n                                            |   nonsense qualification? <END_OF_LINE> \n\n                                            ;\n\n      \n';

var statement = '\n\n\n     typeAssertion                        ::=   expression ":" typeName ;\n\n     equality                             ::=   expression "=" expression ;\n\n     expression                           ::=   term ;\n\n\n\n     statement                            ::=   typeAssertion qualification? <END_OF_LINE> \n                                                  \n                                            |   equality qualification? <END_OF_LINE> \n                                                  \n                                            |   metastatement qualification? <END_OF_LINE>\n     \n                                            |   nonsense qualification? <END_OF_LINE>\n\n                                            ;\n\n\n';

var term = '\n\n\n     compoundTerm                         ::=   constructorName<NO_WHITESPACE>parenthesisedTerms ;\n\n\n\n     term                                 ::=   compoundTerm \n     \n                                            |   name\n                                            \n                                            ;\n\n\n';

var defaultCustomGrammarBNFMap = {
      metastatement: metastatement,
      statement: statement,
      term: term
};

module.exports = defaultCustomGrammarBNFMap;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9mbG9yZW5jZS9kZWZhdWx0Q3VzdG9tR3JhbW1hckJORk1hcC5qcyJdLCJuYW1lcyI6WyJtZXRhc3RhdGVtZW50Iiwic3RhdGVtZW50IiwidGVybSIsImRlZmF1bHRDdXN0b21HcmFtbWFyQk5GTWFwIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBTUEsb3JDQUFOOztBQWtDQSxJQUFNQywwdkJBQU47O0FBd0JBLElBQU1DLHNWQUFOOztBQWdCQSxJQUFNQyw2QkFBNkI7QUFDakNILHFCQUFlQSxhQURrQjtBQUVqQ0MsaUJBQVdBLFNBRnNCO0FBR2pDQyxZQUFNQTtBQUgyQixDQUFuQzs7QUFNQUUsT0FBT0MsT0FBUCxHQUFpQkYsMEJBQWpCIiwiZmlsZSI6ImRlZmF1bHRDdXN0b21HcmFtbWFyQk5GTWFwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBtZXRhc3RhdGVtZW50ID0gYFxuXG5cbiAgICAgcHJvb2ZBc3NlcnRpb24gICAgICAgICAgICAgICAgICAgICAgIDo6PSAgIGNvbnRleHQgXCLiiqJcIiBqdWRnZW1lbnQgO1xuICAgICBcbiAgICAgY29udGV4dERlZmluaXRpb24gICAgICAgICAgICAgICAgICAgIDo6PSAgIGNvbnRleHQgXCI9XCIgKCBqdWRnZW1lbnQgfCBjb250ZXh0ICkgKCBcIixcIiAoIGp1ZGdlbWVudCB8IGNvbnRleHQgKSApKiA7XG5cbiAgICAganVkZ2VtZW50ICAgICAgICAgICAgICAgICAgICAgICAgICAgIDo6PSAgIHJlZmVyZW5jZSBcIjo6XCIgbWV0YXN0YXRlbWVudEJvZHkgO1xuXG4gICAgIHN1YnByb29mICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6Oj0gICBzdXBwb3NpdGlvbiBcIi4uLlwiIG1ldGFzdGF0ZW1lbnRCb2R5IDtcblxuICAgICBzdXBwb3NpdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgOjo9ICAgXCJbXCIgbWV0YXN0YXRlbWVudEJvZHkgXCJdXCIgO1xuXG5cblxuICAgICBtZXRhc3RhdGVtZW50Qm9keSAgICAgICAgICAgICAgICAgICAgOjo9ICAgKCBwcm9vZkFzc2VydGlvbiB8IGNvbnRleHREZWZpbml0aW9uIHwgc3VicHJvb2YgfCBtZXRhdmFyaWFibGUgKSA7IFxuXG5cblxuICAgICBtZXRhc3RhdGVtZW50ICAgICAgICAgICAgICAgICAgICAgICAgOjo9ICAgcHJvb2ZBc3NlcnRpb24gcXVhbGlmaWNhdGlvbj8gPEVORF9PRl9MSU5FPiBcbiAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICBjb250ZXh0RGVmaW5pdGlvbiBxdWFsaWZpY2F0aW9uPyA8RU5EX09GX0xJTkU+IFxuICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgIHN1YnByb29mIHF1YWxpZmljYXRpb24/IDxFTkRfT0ZfTElORT4gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgbWV0YXZhcmlhYmxlIHF1YWxpZmljYXRpb24/IDxFTkRfT0ZfTElORT4gXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgIG5vbnNlbnNlIHF1YWxpZmljYXRpb24/IDxFTkRfT0ZfTElORT4gXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgO1xuXG4gICAgICBcbmA7XG5cbmNvbnN0IHN0YXRlbWVudCA9IGBcblxuXG4gICAgIHR5cGVBc3NlcnRpb24gICAgICAgICAgICAgICAgICAgICAgICA6Oj0gICBleHByZXNzaW9uIFwiOlwiIHR5cGVOYW1lIDtcblxuICAgICBlcXVhbGl0eSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOjo9ICAgZXhwcmVzc2lvbiBcIj1cIiBleHByZXNzaW9uIDtcblxuICAgICBleHByZXNzaW9uICAgICAgICAgICAgICAgICAgICAgICAgICAgOjo9ICAgdGVybSA7XG5cblxuXG4gICAgIHN0YXRlbWVudCAgICAgICAgICAgICAgICAgICAgICAgICAgICA6Oj0gICB0eXBlQXNzZXJ0aW9uIHF1YWxpZmljYXRpb24/IDxFTkRfT0ZfTElORT4gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgZXF1YWxpdHkgcXVhbGlmaWNhdGlvbj8gPEVORF9PRl9MSU5FPiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICBtZXRhc3RhdGVtZW50IHF1YWxpZmljYXRpb24/IDxFTkRfT0ZfTElORT5cbiAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICBub25zZW5zZSBxdWFsaWZpY2F0aW9uPyA8RU5EX09GX0xJTkU+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgO1xuXG5cbmA7XG5cbmNvbnN0IHRlcm0gPSBgXG5cblxuICAgICBjb21wb3VuZFRlcm0gICAgICAgICAgICAgICAgICAgICAgICAgOjo9ICAgY29uc3RydWN0b3JOYW1lPE5PX1dISVRFU1BBQ0U+cGFyZW50aGVzaXNlZFRlcm1zIDtcblxuXG5cbiAgICAgdGVybSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDo6PSAgIGNvbXBvdW5kVGVybSBcbiAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICBuYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA7XG5cblxuYDtcblxuY29uc3QgZGVmYXVsdEN1c3RvbUdyYW1tYXJCTkZNYXAgPSB7XG4gIG1ldGFzdGF0ZW1lbnQ6IG1ldGFzdGF0ZW1lbnQsXG4gIHN0YXRlbWVudDogc3RhdGVtZW50LFxuICB0ZXJtOiB0ZXJtXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGRlZmF1bHRDdXN0b21HcmFtbWFyQk5GTWFwO1xuIl19