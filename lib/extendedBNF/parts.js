'use strict';

var EpsilonPart = require('./part/epsilon'),
    WildcardPart = require('./part/wildcard'),
    EndOfLinePart = require('./part/endOfLine'),
    OptionalPartPart = require('./part/optionalPart'),
    GroupOfPartsPart = require('./part/groupOfParts'),
    ChoiceOfPartsPart = require('./part/choiceOfParts'),
    TerminalSymbolPart = require('./part/terminalSymbol'),
    ProductionNamePart = require('./part/productionName'),
    OneOrMorePartsPart = require('./part/oneOrMoreParts'),
    SequenceOfPartsPart = require('./part/sequenceOfParts'),
    ZeroOrMorePartsPart = require('./part/zeroOrMoreParts'),
    RegularExpressionPart = require('./part/regularExpression'),
    SignificantTokenTypePart = require('./part/significantTokenType');

var Parts = {
  'EpsilonPart': EpsilonPart,
  'WildcardPart': WildcardPart,
  'EndOfLinePart': EndOfLinePart,
  'OptionalPartPart': OptionalPartPart,
  'GroupOfPartsPart': GroupOfPartsPart,
  'ChoiceOfPartsPart': ChoiceOfPartsPart,
  'TerminalSymbolPart': TerminalSymbolPart,
  'ProductionNamePart': ProductionNamePart,
  'OneOrMorePartsPart': OneOrMorePartsPart,
  'SequenceOfPartsPart': SequenceOfPartsPart,
  'ZeroOrMorePartsPart': ZeroOrMorePartsPart,
  'RegularExpressionPart': RegularExpressionPart,
  'SignificantTokenTypePart': SignificantTokenTypePart
};

module.exports = Parts;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9leHRlbmRlZEJORi9wYXJ0cy5qcyJdLCJuYW1lcyI6WyJFcHNpbG9uUGFydCIsInJlcXVpcmUiLCJXaWxkY2FyZFBhcnQiLCJFbmRPZkxpbmVQYXJ0IiwiT3B0aW9uYWxQYXJ0UGFydCIsIkdyb3VwT2ZQYXJ0c1BhcnQiLCJDaG9pY2VPZlBhcnRzUGFydCIsIlRlcm1pbmFsU3ltYm9sUGFydCIsIlByb2R1Y3Rpb25OYW1lUGFydCIsIk9uZU9yTW9yZVBhcnRzUGFydCIsIlNlcXVlbmNlT2ZQYXJ0c1BhcnQiLCJaZXJvT3JNb3JlUGFydHNQYXJ0IiwiUmVndWxhckV4cHJlc3Npb25QYXJ0IiwiU2lnbmlmaWNhbnRUb2tlblR5cGVQYXJ0IiwiUGFydHMiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxjQUFjQyxRQUFRLGdCQUFSLENBQXBCO0FBQUEsSUFDTUMsZUFBZUQsUUFBUSxpQkFBUixDQURyQjtBQUFBLElBRU1FLGdCQUFnQkYsUUFBUSxrQkFBUixDQUZ0QjtBQUFBLElBR01HLG1CQUFtQkgsUUFBUSxxQkFBUixDQUh6QjtBQUFBLElBSU1JLG1CQUFtQkosUUFBUSxxQkFBUixDQUp6QjtBQUFBLElBS01LLG9CQUFvQkwsUUFBUSxzQkFBUixDQUwxQjtBQUFBLElBTU1NLHFCQUFxQk4sUUFBUSx1QkFBUixDQU4zQjtBQUFBLElBT01PLHFCQUFxQlAsUUFBUSx1QkFBUixDQVAzQjtBQUFBLElBUU1RLHFCQUFxQlIsUUFBUSx1QkFBUixDQVIzQjtBQUFBLElBU01TLHNCQUFzQlQsUUFBUSx3QkFBUixDQVQ1QjtBQUFBLElBVU1VLHNCQUFzQlYsUUFBUSx3QkFBUixDQVY1QjtBQUFBLElBV01XLHdCQUF3QlgsUUFBUSwwQkFBUixDQVg5QjtBQUFBLElBWU1ZLDJCQUEyQlosUUFBUSw2QkFBUixDQVpqQzs7QUFjQSxJQUFNYSxRQUFRO0FBQ1osaUJBQWdCZCxXQURKO0FBRVosa0JBQWlCRSxZQUZMO0FBR1osbUJBQWtCQyxhQUhOO0FBSVosc0JBQXFCQyxnQkFKVDtBQUtaLHNCQUFxQkMsZ0JBTFQ7QUFNWix1QkFBc0JDLGlCQU5WO0FBT1osd0JBQXVCQyxrQkFQWDtBQVFaLHdCQUF1QkMsa0JBUlg7QUFTWix3QkFBdUJDLGtCQVRYO0FBVVoseUJBQXdCQyxtQkFWWjtBQVdaLHlCQUF3QkMsbUJBWFo7QUFZWiwyQkFBMEJDLHFCQVpkO0FBYVosOEJBQTZCQztBQWJqQixDQUFkOztBQWdCQUUsT0FBT0MsT0FBUCxHQUFpQkYsS0FBakIiLCJmaWxlIjoicGFydHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IEVwc2lsb25QYXJ0ID0gcmVxdWlyZSgnLi9wYXJ0L2Vwc2lsb24nKSxcbiAgICAgIFdpbGRjYXJkUGFydCA9IHJlcXVpcmUoJy4vcGFydC93aWxkY2FyZCcpLFxuICAgICAgRW5kT2ZMaW5lUGFydCA9IHJlcXVpcmUoJy4vcGFydC9lbmRPZkxpbmUnKSwgICAgXG4gICAgICBPcHRpb25hbFBhcnRQYXJ0ID0gcmVxdWlyZSgnLi9wYXJ0L29wdGlvbmFsUGFydCcpLFxuICAgICAgR3JvdXBPZlBhcnRzUGFydCA9IHJlcXVpcmUoJy4vcGFydC9ncm91cE9mUGFydHMnKSxcbiAgICAgIENob2ljZU9mUGFydHNQYXJ0ID0gcmVxdWlyZSgnLi9wYXJ0L2Nob2ljZU9mUGFydHMnKSxcbiAgICAgIFRlcm1pbmFsU3ltYm9sUGFydCA9IHJlcXVpcmUoJy4vcGFydC90ZXJtaW5hbFN5bWJvbCcpLFxuICAgICAgUHJvZHVjdGlvbk5hbWVQYXJ0ID0gcmVxdWlyZSgnLi9wYXJ0L3Byb2R1Y3Rpb25OYW1lJyksXG4gICAgICBPbmVPck1vcmVQYXJ0c1BhcnQgPSByZXF1aXJlKCcuL3BhcnQvb25lT3JNb3JlUGFydHMnKSxcbiAgICAgIFNlcXVlbmNlT2ZQYXJ0c1BhcnQgPSByZXF1aXJlKCcuL3BhcnQvc2VxdWVuY2VPZlBhcnRzJyksXG4gICAgICBaZXJvT3JNb3JlUGFydHNQYXJ0ID0gcmVxdWlyZSgnLi9wYXJ0L3plcm9Pck1vcmVQYXJ0cycpLFxuICAgICAgUmVndWxhckV4cHJlc3Npb25QYXJ0ID0gcmVxdWlyZSgnLi9wYXJ0L3JlZ3VsYXJFeHByZXNzaW9uJyksXG4gICAgICBTaWduaWZpY2FudFRva2VuVHlwZVBhcnQgPSByZXF1aXJlKCcuL3BhcnQvc2lnbmlmaWNhbnRUb2tlblR5cGUnKTtcblxuY29uc3QgUGFydHMgPSB7XG4gICdFcHNpbG9uUGFydCcgOiBFcHNpbG9uUGFydCxcbiAgJ1dpbGRjYXJkUGFydCcgOiBXaWxkY2FyZFBhcnQsXG4gICdFbmRPZkxpbmVQYXJ0JyA6IEVuZE9mTGluZVBhcnQsXG4gICdPcHRpb25hbFBhcnRQYXJ0JyA6IE9wdGlvbmFsUGFydFBhcnQsXG4gICdHcm91cE9mUGFydHNQYXJ0JyA6IEdyb3VwT2ZQYXJ0c1BhcnQsXG4gICdDaG9pY2VPZlBhcnRzUGFydCcgOiBDaG9pY2VPZlBhcnRzUGFydCxcbiAgJ1Rlcm1pbmFsU3ltYm9sUGFydCcgOiBUZXJtaW5hbFN5bWJvbFBhcnQsXG4gICdQcm9kdWN0aW9uTmFtZVBhcnQnIDogUHJvZHVjdGlvbk5hbWVQYXJ0LFxuICAnT25lT3JNb3JlUGFydHNQYXJ0JyA6IE9uZU9yTW9yZVBhcnRzUGFydCxcbiAgJ1NlcXVlbmNlT2ZQYXJ0c1BhcnQnIDogU2VxdWVuY2VPZlBhcnRzUGFydCxcbiAgJ1plcm9Pck1vcmVQYXJ0c1BhcnQnIDogWmVyb09yTW9yZVBhcnRzUGFydCxcbiAgJ1JlZ3VsYXJFeHByZXNzaW9uUGFydCcgOiBSZWd1bGFyRXhwcmVzc2lvblBhcnQsXG4gICdTaWduaWZpY2FudFRva2VuVHlwZVBhcnQnIDogU2lnbmlmaWNhbnRUb2tlblR5cGVQYXJ0XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFBhcnRzO1xuIl19