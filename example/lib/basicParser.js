'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var easyui = require('easyui'),
    Input = easyui.Input,
    Element = easyui.Element,
    TextArea = easyui.TextArea;

var Parser = require('../../es6/parser'),
    BNFLexer = require('../../es6/bnfLexer'),
    BNFParser = require('../../es6/bnfParser');

var inputTextAreaSelector = 'textArea#input',
    grammarTextAreaSelector = 'textArea#grammar',
    paragraphElementSelector = 'p',
    terminalSymbolsRegExpPatternInputSelector = 'input#terminalSymbolsRegExpPattern',
    inputTextArea = new TextArea(inputTextAreaSelector),
    grammarTextArea = new TextArea(grammarTextAreaSelector),
    paragraphElement = new Element(paragraphElementSelector),
    terminalSymbolsRegExpPatternInput = new Input(terminalSymbolsRegExpPatternInputSelector);

var Parts = [],
    mappings = {};

var BasicParser = function () {
  function BasicParser() {
    _classCallCheck(this, BasicParser);
  }

  _createClass(BasicParser, null, [{
    key: 'run',
    value: function run() {
      updateParser();

      terminalSymbolsRegExpPatternInput.onChange(function () {
        updateParser();
        updateInput();
      });

      grammarTextArea.onChange(function () {
        updateParser();
        updateInput();
      });

      inputTextArea.onChange(function () {
        updateInput();
      });
    }
  }]);

  return BasicParser;
}();

module.exports = BasicParser;

var parser;

function updateParser() {
  var grammarTextAreaValue = grammarTextArea.getValue(),
      terminalSymbolsRegExpPatternInputValue = terminalSymbolsRegExpPatternInput.getValue(),
      grammar = grammarTextAreaValue,
      ///
  terminalSymbolsRegExpPattern = terminalSymbolsRegExpPatternInputValue,
      ///
  lines = BNFLexer.linesFromGrammar(grammar),
      productions = BNFParser.parse(lines, Parts, terminalSymbolsRegExpPattern, mappings);

  parser = new Parser(productions);
}

function updateInput() {
  var inputTextAreaValue = inputTextArea.getValue(),
      input = inputTextAreaValue,
      ///
  parsedInput = parser.parse(input),
      paragraphElementHTML = parsedInput; ///

  paragraphElement.html(paragraphElementHTML);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2VzNi9iYXNpY1BhcnNlci5qcyJdLCJuYW1lcyI6WyJlYXN5dWkiLCJyZXF1aXJlIiwiSW5wdXQiLCJFbGVtZW50IiwiVGV4dEFyZWEiLCJQYXJzZXIiLCJCTkZMZXhlciIsIkJORlBhcnNlciIsImlucHV0VGV4dEFyZWFTZWxlY3RvciIsImdyYW1tYXJUZXh0QXJlYVNlbGVjdG9yIiwicGFyYWdyYXBoRWxlbWVudFNlbGVjdG9yIiwidGVybWluYWxTeW1ib2xzUmVnRXhwUGF0dGVybklucHV0U2VsZWN0b3IiLCJpbnB1dFRleHRBcmVhIiwiZ3JhbW1hclRleHRBcmVhIiwicGFyYWdyYXBoRWxlbWVudCIsInRlcm1pbmFsU3ltYm9sc1JlZ0V4cFBhdHRlcm5JbnB1dCIsIlBhcnRzIiwibWFwcGluZ3MiLCJCYXNpY1BhcnNlciIsInVwZGF0ZVBhcnNlciIsIm9uQ2hhbmdlIiwidXBkYXRlSW5wdXQiLCJtb2R1bGUiLCJleHBvcnRzIiwicGFyc2VyIiwiZ3JhbW1hclRleHRBcmVhVmFsdWUiLCJnZXRWYWx1ZSIsInRlcm1pbmFsU3ltYm9sc1JlZ0V4cFBhdHRlcm5JbnB1dFZhbHVlIiwiZ3JhbW1hciIsInRlcm1pbmFsU3ltYm9sc1JlZ0V4cFBhdHRlcm4iLCJsaW5lcyIsImxpbmVzRnJvbUdyYW1tYXIiLCJwcm9kdWN0aW9ucyIsInBhcnNlIiwiaW5wdXRUZXh0QXJlYVZhbHVlIiwiaW5wdXQiLCJwYXJzZWRJbnB1dCIsInBhcmFncmFwaEVsZW1lbnRIVE1MIiwiaHRtbCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQUVBLElBQUlBLFNBQVNDLFFBQVEsUUFBUixDQUFiO0FBQUEsSUFDSUMsUUFBUUYsT0FBT0UsS0FEbkI7QUFBQSxJQUVJQyxVQUFVSCxPQUFPRyxPQUZyQjtBQUFBLElBR0lDLFdBQVdKLE9BQU9JLFFBSHRCOztBQUtBLElBQUlDLFNBQVNKLFFBQVMsa0JBQVQsQ0FBYjtBQUFBLElBQ0lLLFdBQVdMLFFBQVMsb0JBQVQsQ0FEZjtBQUFBLElBRUlNLFlBQVlOLFFBQVMscUJBQVQsQ0FGaEI7O0FBSUEsSUFBSU8sd0JBQXdCLGdCQUE1QjtBQUFBLElBQ0lDLDBCQUEwQixrQkFEOUI7QUFBQSxJQUVJQywyQkFBMkIsR0FGL0I7QUFBQSxJQUdJQyw0Q0FBNEMsb0NBSGhEO0FBQUEsSUFJSUMsZ0JBQWdCLElBQUlSLFFBQUosQ0FBYUkscUJBQWIsQ0FKcEI7QUFBQSxJQUtJSyxrQkFBa0IsSUFBSVQsUUFBSixDQUFhSyx1QkFBYixDQUx0QjtBQUFBLElBTUlLLG1CQUFtQixJQUFJWCxPQUFKLENBQVlPLHdCQUFaLENBTnZCO0FBQUEsSUFPSUssb0NBQW9DLElBQUliLEtBQUosQ0FBVVMseUNBQVYsQ0FQeEM7O0FBU0EsSUFBSUssUUFBUSxFQUFaO0FBQUEsSUFDSUMsV0FBVyxFQURmOztJQUdNQyxXOzs7Ozs7OzBCQUNTO0FBQ1hDOztBQUVBSix3Q0FBa0NLLFFBQWxDLENBQTJDLFlBQVc7QUFDcEREO0FBQ0FFO0FBQ0QsT0FIRDs7QUFLQVIsc0JBQWdCTyxRQUFoQixDQUF5QixZQUFXO0FBQ2xDRDtBQUNBRTtBQUNELE9BSEQ7O0FBS0FULG9CQUFjUSxRQUFkLENBQXVCLFlBQVc7QUFDaENDO0FBQ0QsT0FGRDtBQUdEOzs7Ozs7QUFHSEMsT0FBT0MsT0FBUCxHQUFpQkwsV0FBakI7O0FBRUEsSUFBSU0sTUFBSjs7QUFFQSxTQUFTTCxZQUFULEdBQXdCO0FBQ3RCLE1BQUlNLHVCQUF1QlosZ0JBQWdCYSxRQUFoQixFQUEzQjtBQUFBLE1BQ0lDLHlDQUF5Q1osa0NBQWtDVyxRQUFsQyxFQUQ3QztBQUFBLE1BRUlFLFVBQVVILG9CQUZkO0FBQUEsTUFFb0M7QUFDaENJLGlDQUErQkYsc0NBSG5DO0FBQUEsTUFHMkU7QUFDdkVHLFVBQVF4QixTQUFTeUIsZ0JBQVQsQ0FBMEJILE9BQTFCLENBSlo7QUFBQSxNQUtJSSxjQUFjekIsVUFBVTBCLEtBQVYsQ0FBZ0JILEtBQWhCLEVBQXVCZCxLQUF2QixFQUE4QmEsNEJBQTlCLEVBQTREWixRQUE1RCxDQUxsQjs7QUFPQU8sV0FBUyxJQUFJbkIsTUFBSixDQUFXMkIsV0FBWCxDQUFUO0FBQ0Q7O0FBRUQsU0FBU1gsV0FBVCxHQUF1QjtBQUNyQixNQUFJYSxxQkFBcUJ0QixjQUFjYyxRQUFkLEVBQXpCO0FBQUEsTUFDSVMsUUFBUUQsa0JBRFo7QUFBQSxNQUNpQztBQUM3QkUsZ0JBQWNaLE9BQU9TLEtBQVAsQ0FBYUUsS0FBYixDQUZsQjtBQUFBLE1BR0lFLHVCQUF1QkQsV0FIM0IsQ0FEcUIsQ0FJbUI7O0FBRXhDdEIsbUJBQWlCd0IsSUFBakIsQ0FBc0JELG9CQUF0QjtBQUNEIiwiZmlsZSI6ImJhc2ljUGFyc2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgZWFzeXVpID0gcmVxdWlyZSgnZWFzeXVpJyksXG4gICAgSW5wdXQgPSBlYXN5dWkuSW5wdXQsXG4gICAgRWxlbWVudCA9IGVhc3l1aS5FbGVtZW50LFxuICAgIFRleHRBcmVhID0gZWFzeXVpLlRleHRBcmVhO1xuXG52YXIgUGFyc2VyID0gcmVxdWlyZSAoJy4uLy4uL2VzNi9wYXJzZXInKSxcbiAgICBCTkZMZXhlciA9IHJlcXVpcmUgKCcuLi8uLi9lczYvYm5mTGV4ZXInKSxcbiAgICBCTkZQYXJzZXIgPSByZXF1aXJlICgnLi4vLi4vZXM2L2JuZlBhcnNlcicpO1xuXG52YXIgaW5wdXRUZXh0QXJlYVNlbGVjdG9yID0gJ3RleHRBcmVhI2lucHV0JyxcbiAgICBncmFtbWFyVGV4dEFyZWFTZWxlY3RvciA9ICd0ZXh0QXJlYSNncmFtbWFyJyxcbiAgICBwYXJhZ3JhcGhFbGVtZW50U2VsZWN0b3IgPSAncCcsXG4gICAgdGVybWluYWxTeW1ib2xzUmVnRXhwUGF0dGVybklucHV0U2VsZWN0b3IgPSAnaW5wdXQjdGVybWluYWxTeW1ib2xzUmVnRXhwUGF0dGVybicsXG4gICAgaW5wdXRUZXh0QXJlYSA9IG5ldyBUZXh0QXJlYShpbnB1dFRleHRBcmVhU2VsZWN0b3IpLFxuICAgIGdyYW1tYXJUZXh0QXJlYSA9IG5ldyBUZXh0QXJlYShncmFtbWFyVGV4dEFyZWFTZWxlY3RvciksXG4gICAgcGFyYWdyYXBoRWxlbWVudCA9IG5ldyBFbGVtZW50KHBhcmFncmFwaEVsZW1lbnRTZWxlY3RvciksXG4gICAgdGVybWluYWxTeW1ib2xzUmVnRXhwUGF0dGVybklucHV0ID0gbmV3IElucHV0KHRlcm1pbmFsU3ltYm9sc1JlZ0V4cFBhdHRlcm5JbnB1dFNlbGVjdG9yKTtcblxudmFyIFBhcnRzID0gW10sXG4gICAgbWFwcGluZ3MgPSB7fTtcblxuY2xhc3MgQmFzaWNQYXJzZXIge1xuICBzdGF0aWMgcnVuKCkge1xuICAgIHVwZGF0ZVBhcnNlcigpO1xuXG4gICAgdGVybWluYWxTeW1ib2xzUmVnRXhwUGF0dGVybklucHV0Lm9uQ2hhbmdlKGZ1bmN0aW9uKCkge1xuICAgICAgdXBkYXRlUGFyc2VyKCk7XG4gICAgICB1cGRhdGVJbnB1dCgpO1xuICAgIH0pO1xuXG4gICAgZ3JhbW1hclRleHRBcmVhLm9uQ2hhbmdlKGZ1bmN0aW9uKCkge1xuICAgICAgdXBkYXRlUGFyc2VyKCk7XG4gICAgICB1cGRhdGVJbnB1dCgpO1xuICAgIH0pO1xuXG4gICAgaW5wdXRUZXh0QXJlYS5vbkNoYW5nZShmdW5jdGlvbigpIHtcbiAgICAgIHVwZGF0ZUlucHV0KCk7XG4gICAgfSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBCYXNpY1BhcnNlcjtcblxudmFyIHBhcnNlcjtcblxuZnVuY3Rpb24gdXBkYXRlUGFyc2VyKCkge1xuICB2YXIgZ3JhbW1hclRleHRBcmVhVmFsdWUgPSBncmFtbWFyVGV4dEFyZWEuZ2V0VmFsdWUoKSxcbiAgICAgIHRlcm1pbmFsU3ltYm9sc1JlZ0V4cFBhdHRlcm5JbnB1dFZhbHVlID0gdGVybWluYWxTeW1ib2xzUmVnRXhwUGF0dGVybklucHV0LmdldFZhbHVlKCksXG4gICAgICBncmFtbWFyID0gZ3JhbW1hclRleHRBcmVhVmFsdWUsIC8vL1xuICAgICAgdGVybWluYWxTeW1ib2xzUmVnRXhwUGF0dGVybiA9IHRlcm1pbmFsU3ltYm9sc1JlZ0V4cFBhdHRlcm5JbnB1dFZhbHVlLCAvLy9cbiAgICAgIGxpbmVzID0gQk5GTGV4ZXIubGluZXNGcm9tR3JhbW1hcihncmFtbWFyKSxcbiAgICAgIHByb2R1Y3Rpb25zID0gQk5GUGFyc2VyLnBhcnNlKGxpbmVzLCBQYXJ0cywgdGVybWluYWxTeW1ib2xzUmVnRXhwUGF0dGVybiwgbWFwcGluZ3MpO1xuXG4gIHBhcnNlciA9IG5ldyBQYXJzZXIocHJvZHVjdGlvbnMpO1xufVxuXG5mdW5jdGlvbiB1cGRhdGVJbnB1dCgpIHtcbiAgdmFyIGlucHV0VGV4dEFyZWFWYWx1ZSA9IGlucHV0VGV4dEFyZWEuZ2V0VmFsdWUoKSxcbiAgICAgIGlucHV0ID0gaW5wdXRUZXh0QXJlYVZhbHVlLCAgLy8vXG4gICAgICBwYXJzZWRJbnB1dCA9IHBhcnNlci5wYXJzZShpbnB1dCksXG4gICAgICBwYXJhZ3JhcGhFbGVtZW50SFRNTCA9IHBhcnNlZElucHV0OyAvLy9cblxuICBwYXJhZ3JhcGhFbGVtZW50Lmh0bWwocGFyYWdyYXBoRWxlbWVudEhUTUwpO1xufVxuIl19